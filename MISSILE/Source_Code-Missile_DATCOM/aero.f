      SUBROUTINE AERO
C      
C***  TOP LEVEL EXECUTIVE ROUTINE FOR CALCULATING AERODYNAMICS
C      
      COMMON /FLC/    NALPHA,ALPHA(20),BETA,PHI,NMACH,MACH(20),
     1                ALT(20),REN(20),VINF(20),TINF(20),PINF(20)
      COMMON /REFQN/  SREF,LREF,LATREF,ROUGH,XCG,ZCG,SCALE,BLAYER,RHR
      REAL LREF,LATREF
      COMMON /SECVAR/ XU(50),XL(50),YU(50),YL(50),YUU(50),YLL(50),
     1                L,I,J,K,II,JJ,KK,III,JJJ,KKK,LLL,
     2                ALPHAI,ALPHAO,AII,XOVC
      COMMON /TOTALC/ TOTC(80)
      COMMON /ABODIN/ BDIN(299),PROTUB,B1DUM(581)
      COMMON /BDWORK/ GBOD(100),CAFB(20),B2DUM(121)
      COMMON /GEOBOD/ HBOD(25),SWET,B3DUM(21)
      COMMON /SBODY/ BCN(20),BCM(20),BCA(20),BCY(20),BCLN(20),BCLL(20),
     1                BCNA(20),BCMA(20),BCYB(20),BCLNB(20),BCLLB(20)
      COMMON /SFIN1/  F1CN(20),F1CM(20),F1CA(20),F1CY(20),F1CLN(20),
     1                F1CLL(20),DU1(40),F1CYB(20),F1CLNB(20),F1CLLB(20)
      COMMON /SFIN2/  F2CN(20),F2CM(20),F2CA(20),F2CY(20),F2CLN(20),
     1                F2CLL(20),DU2(40),F2CYB(20),F2CLNB(20),F2CLLB(20)
      COMMON /SFIN3/  F3CN(20),F3CM(20),F3CA(20),F3CY(20),F3CLN(20),
     1                F3CLL(20),DU3(40),F3CYB(20),F3CLNB(20),F3CLLB(20)
      COMMON /SFIN4/  F4CN(20),F4CM(20),F4CA(20),F4CY(20),F4CLN(20),
     1                F4CLL(20),DU4(40),F4CYB(20),F4CLNB(20),F4CLLB(20)
      COMMON /CONST/ PI,RAD,UNUSED,KAND
      COMMON /CASEID/ DUMMEE(175),ICASE,NOEXTR,NOLAT,IR,IPAGE
      COMMON /INC/ COREC(129),ALP1(20),NAP
      COMMON /LOGIC/ LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
C
C  EFFECTIVE FULL FIN DEFLECTIONS
      COMMON /FFINDL/DSYN1(8),DSYN2(8),DSYN3(8),DSYN4(8),CLD(4)
C
      LOGICAL        LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD,PROTUB
C
      DIMENSION BBCN(20,5),BBCM(20,5),BBCA(20,5),BBCY(20,5),BBCSN(20,5)
     1          ,BBCSL(20,5),IFOUND(6)
      DIMENSION CBODY(120),CFIN1(120),CFIN2(120),CFIN3(120),CFIN4(120)
C
      REAL NALPHA,NMACH,MACH
C      
      REAL NAP
C      
      LOGICAL TTRIM,LBODY
C      
      EQUIVALENCE (CBODY(1),BCN(1)),(CFIN1(1),F1CN(1)),
     1            (CFIN2(1),F2CN(1)),(CFIN3(1),F3CN(1)),
     2            (CFIN4(1),F4CN(1))
C
C  $DEFLCT DEFLECTIONS REQUIRED
      COMMON /INCID/  DEL1(8),DEL2(8),DEL3(8),DEL4(8),XHINGE(4),
     1                SKEW(4)
C
C  $FINSETn DATA REQUIRED
      COMMON /FSET1/  FIN1(399)
      COMMON /FSET2/  FIN2(399)
      COMMON /FSET3/  FIN3(399)
      COMMON /FSET4/  FIN4(399)
C
C  FINSET AERODYNAMIC DATA REQUIRED
      COMMON /F1WORK/ F1WK(290)
      COMMON /F2WORK/ F2WK(290)
      COMMON /F3WORK/ F3WK(290)
      COMMON /F4WORK/ F4WK(290)
C
C  FINSET GEOMETRIC DATA REQUIRED
      COMMON /GEOFS1/ GFIN1(188)
      COMMON /GEOFS2/ GFIN2(188)
      COMMON /GEOFS3/ GFIN3(188)
      COMMON /GEOFS4/ GFIN4(188)
C
C  DIMENSION STATION SEMI-SPANS
      DIMENSION SSPAN1(10), SSPAN2(10), SSPAN3(10), SSPAN4(10)
C
C  DIMENSION FIN CHORDS
      DIMENSION CHORDS1(10), CHORDS2(10), CHORDS3(10), CHORDS4(10)
C
C  DIMENSION YUPPER
      DIMENSION YUPER1(50), YUPER2(50), YUPER3(50), YUPER4(50)
C
C  DIMENSION (FLAP CHORD/FIN CHORD)station i ARRAYS
      DIMENSION CFOC1(10), CFOC2(10), CFOC3(10), CFOC4(10)
C
C  DEFINE NORMAL FORCE CURVE SLOPE
      EQUIVALENCE (F1WK(64),CNALP1),(F2WK(64),CNALP2),
     1            (F3WK(64),CNALP3),(F4WK(64),CNALP4)
C
C  DEFINE ZERO ALPHA AXIAL FORCE FOR PANELS
      EQUIVALENCE (F1WK(207),CAZRO1),(F2WK(207),CAZRO2),
     1            (F3WK(207),CAZRO3),(F4WK(207),CAZRO4)
C
C  DEFINE STATION SEMI-SPANS
      EQUIVALENCE (FIN1(2),SSPAN1(1)),(FIN2(2),SSPAN2(1)),
     1            (FIN3(2),SSPAN3(1)),(FIN4(2),SSPAN4(1))
C
C  DEFINE FIN CHORDS
      EQUIVALENCE (FIN1(52),CHORDS1(1)),(FIN2(52),CHORDS2(1)),
     1            (FIN3(52),CHORDS3(1)),(FIN4(52),CHORDS4(1))
C
C  DEFINE YUPPER
      EQUIVALENCE (FIN1(263),YUPER1(1)),(FIN2(263),YUPER2(1)),
     1            (FIN3(263),YUPER3(1)),(FIN4(263),YUPER4(1))
C
C  DEFINE (FLAP CHORD/FIN CHORD)station i
      EQUIVALENCE (FIN1(390),CFOC1(1)),(FIN2(390),CFOC2(1)),
     1            (FIN3(390),CFOC3(1)),(FIN4(390),CFOC4(1))
C
C  DEFINE LIFT CURVE SLOPE VARIABLES
      EQUIVALENCE (F1WK(64),CNALF1),(F2WK(64),CNALF2),
     1            (F3WK(64),CNALF3),(F4WK(64),CNALF4)
C
C  DEFINE (t/c)eff VARIABLES
      EQUIVALENCE (GFIN1(176),TCEFF1),(GFIN2(176),TCEFF2),
     1            (GFIN3(176),TCEFF3),(GFIN4(176),TCEFF4)
C
C  DEFINE EFFECTIVE LEADING EDGE SWEEP ANGLE
      EQUIVALENCE (GFIN1(179),XLAM1),(GFIN2(179),XLAM2),
     1            (GFIN3(179),XLAM3),(GFIN4(179),XLAM4)
C
C  DEFINE EFFECTIVE TRAILING EDGE SWEEP ANGLE
      EQUIVALENCE (GFIN1(183),XLMTE1),(GFIN2(183),XLMTE2),
     1            (GFIN3(183),XLMTE3),(GFIN4(183),XLMTE4)
C      
C  DEFINE EFFECTIVE FULL FIN DEFLECTIONS
      DO 500 K=1,8
         DSYN1(K)=DEL1(K)
         DSYN2(K)=DEL2(K)
         DSYN3(K)=DEL3(K)
         DSYN4(K)=DEL4(K)
  500 CONTINUE
C
      NALP=NALPHA+.5
C      
      NM=NMACH+0.5
      IF(NM .LE. 0)NM=1
      DO 1000 I=1,6
         IFOUND(I)=0
 1000 CONTINUE
C      
C     SAVE ALPHA ARRAY FROM FIRST CASE IN ARRAY ALP1 TO BE USED IN
C          CONFIGURATION INCREMENTING
C      
      IF(ICASE .EQ. 1)NAP = NALPHA
      DO 1010 I=1,NALP
         IF(ICASE .EQ. 1)ALP1(I)=ALPHA(I)
 1010 CONTINUE
C      
C***  SET SURFACE ROUGHNESS FOR THE RUN
C      
      IF(ROUGH .LE. UNUSED)ROUGH=0.
      IF(RHR .GT. UNUSED .AND. ROUGH .LE. UNUSED)ROUGH=3.E-6*RHR
C      
C***  COMPUTE FLIGHT CONDITIONS
C      
      CALL FLTCDS
C      
C***  COMPUTE AIRFOIL SECTION AERODYNAMICS AT SUBSONIC/TRANSONIC SPEEDS
C      
      IF(MACH(1) .LE. 1.4)CALL ASECT
C      
      LBODY=LAXIS .OR. LELLB .OR. LARBOD
C      
C***  MAJOR MACH LOOP
C      
      DO 1100 IM=1,NM
C      
C***     INITIALIZE
C      
         CALL INZIOM
C      
C***     BODY ALONE
C      
         IF(LARBOD) PROTUB=.TRUE.
         LARBOD=.FALSE.
         IF(LBODY)CALL BODY(IM)
C      
C        STORE BODY THEORETICAL COEFFICIENTS IN AN ARRAY FOR POSSIBLE
C        USE IN CONFIGURATION INCREMENTING
C      
         DO 1020 I=1,20
            BBCN(I,5)=BCN(I)
            BBCM(I,5)=BCM(I)
            BBCA(I,5)=BCA(I)
            BBCY(I,5)=BCY(I)
            BBCSN(I,5)=BCLN(I)
            BBCSL(I,5)=BCLL(I)
 1020    CONTINUE
C      
C***     BODY ALONE EXPERIMENTAL DATA SUBSTITUTION
C      
         IF(LBODY)CALL SUBEXP(IFOUND,MACH(IM),1,CBODY)
C      
C        IF RUNNING BODY ALONE AND INCRMT CARD IS TRUE
C           CALL CONFIGURATION INCREMENTING
C      
C        SET BPHI TO GREATER THAN ZERO IF PHI OR BETA ARE INPUT
C        TO TRIP FLAGS IN CONFIGURATION INCREMENTING
         IF (PHI .NE. 0. .OR. BETA .NE. 0.)BPHI=1.
         IF(.NOT. LICRMT)GO TO 1030
         IF(LFIN1 .OR. LFIN2 .OR. LFIN3 .OR. LFIN4)GO TO 1030
C      
C        IF EXPERIMENTAL DATA HAS BEEN INPUT OR INCREMENTALS HAVE
C           BEEN CALCULATED FOR A COEFFICIENTS DO INCREMENTING
C      
         IF( IFOUND(1) .EQ. 1 .OR. COREC(2) .NE. UNUSED)
     1      CALL CNINC(ICASE,BBCN,1,CBODY,BPHI)
         IF(IFOUND(2) .EQ. 1 .OR. COREC(24) .NE. UNUSED)
     1      CALL CMINC(ICASE,BBCM,1,CBODY,BPHI)
         IF(IFOUND(3) .EQ. 1 .OR. COREC(45) .NE. UNUSED)
     1      CALL CAINC(ICASE,BBCA,1,CBODY)
         IF(IFOUND(4) .EQ. 1 .OR. COREC(66) .NE. UNUSED)
     1      CALL CYINC(ICASE,BBCY,BBCN,1,CBODY,BPHI)
         IF(IFOUND(5) .EQ. 1 .OR. COREC(88) .NE. UNUSED)
     1      CALL CSNINC(ICASE,BBCSN,BBCM,1,CBODY,BPHI)
         IF(IFOUND(6) .EQ. 1 .OR. COREC(109) .NE. UNUSED)
     1      CALL CSLINC(ICASE,BBCSL,1,CBODY)
C      
C        IF CY,CSN,CSL HAVE BEEN EXPERIMENTALY INPUT OR HAVE
C           INCREMENTED BLANK OUT THE LATERAL DIRECTIONAL
C           DERIVATIVES
C      
 1030    DO 1040 I=1,NALP
            IF(IFOUND(4) .EQ. 1 .OR. COREC(66) .NE. UNUSED)
     1        CBODY(I+160)=-UNUSED
            IF(IFOUND(5) .EQ. 1 .OR. COREC(88) .NE. UNUSED)
     1        CBODY(I+180)=-UNUSED
            IF(IFOUND(6) .EQ. 1 .OR. COREC(109) .NE. UNUSED)
     1        CBODY(I+200)=-UNUSED
 1040    CONTINUE
C      
C***     INLET INCREMENTS
C      
         IF(LINLET)CALL ILTARO(IM,BCN,BCM,BCA,BCY,BCLN,BCLL)
C
C        UPDATE BODY ALONE CNA AND/OR CMA
C      
         DO 1050 I=1,NALP
            CALL POLINT(ALPHA,BCN,NALP,ALPHA(I),CNFINT,BCNA(I))
            CALL POLINT(ALPHA,BCM,NALP,ALPHA(I),CMFINT,BCMA(I))
 1050    CONTINUE
C      
C***     FIN SET 1 ALONE
C      
         IF(LFIN1)CALL FINS(IM,1)
C      
C***     FIN ALONE EXPERIMENTAL DATA SUBSTITUTION
C      
         IF(LFIN1)CALL SUBEXP(IFOUND,MACH(IM),2,CFIN1)
C      
C***     FIN SET 2 ALONE
C      
         IF(LFIN2)CALL FINS(IM,2)
C      
C***     FIN ALONE EXPERIMENTAL DATA SUBSTITUTION
C      
         IF(LFIN2)CALL SUBEXP(IFOUND,MACH(IM),3,CFIN2)
C      
C***     FIN SET 3 ALONE
C      
         IF(LFIN3)CALL FINS(IM,3)
C      
C***     FIN ALONE EXPERIMENTAL DATA SUBSTITUTION
C      
         IF(LFIN3)CALL SUBEXP(IFOUND,MACH(IM),4,CFIN3)
C      
C***     FIN SET 4 ALONE
C      
         IF(LFIN4)CALL FINS(IM,4)
C      
C***     FIN ALONE EXPERIMENTAL DATA SUBSTITUTION
C      
         IF(LFIN4)CALL SUBEXP(IFOUND,MACH(IM),5,CFIN4)

C  FOR THOSE FINSETS EMPLOYING FLAPS COMPUTE THE EFFECTIVE FULL FIN 
C  DEFLECTIONS OF EACH PANEL
C
C  EFFECTIVE FULL FIN DEFLECTION FINSET 1
C
         IF(LFIN1.AND.(CFOC1(1).LT.1.))THEN
C  FIN1(112), NUMBER OF PANELS IN FINSET 1
            NF1=FIN1(112)
	    DO 1051 KPANL=1,NF1
               IF(ABS(DSYN1(KPANL)) .GT. UNUSED)THEN
                 CALL FLAPS(MACH(IM),CFOC1,TCEFF1,DEL1(KPANL),
     1                    CHORDS1,XLAM1,XLMTE1,YUPER1,SSPAN1,
     2                    CNALP1,CAZRO1,SREF,DSYN1(KPANL),CLDEL)
                 CLD(1)=CLDEL
               ENDIF
 1051       CONTINUE
          ENDIF
C
C  EFFECTIVE FULL FIN DEFLECTION FINSET 2
C
         IF(LFIN2.AND.(CFOC2(1).LT.1.))THEN
C  FIN2(112), NUMBER OF PANELS IN FINSET 2
            NF2=FIN2(112)
	    DO 1052 KPANL=1,NF2
               IF(ABS(DSYN2(KPANL)) .GT. UNUSED)THEN
                 CALL FLAPS(MACH(IM),CFOC2,TCEFF2,
     1               DEL2(KPANL),CHORDS2,XLAM2,XLMTE2,YUPER2,
     2               SSPAN2,CNALP2,CAZRO2,SREF,DSYN2(KPANL),CLDEL)
                 CLD(2)=CLDEL
               ENDIF
1052       CONTINUE
          ENDIF
C
C  EFFECTIVE FULL FIN DEFLECTION FINSET 3
C
         IF(LFIN3.AND.(CFOC3(1).LT.1.))THEN
C  FIN3(112), NUMBER OF PANELS IN FINSET 3
            NF3=FIN3(112)
	    DO 1053 KPANL=1,NF3
               IF(ABS(DSYN3(KPANL)) .GT. UNUSED)THEN
                 CALL FLAPS(MACH(IM),CFOC3,TCEFF3,
     1                 DEL3(KPANL),CHORDS3,XLAM3,XLMTE3,YUPER3,
     2                 SSPAN3,CNALP3,CAZRO3,SREF,DSYN3(KPANL),CLDEL)
                 CLD(3)=CLDEL
               ENDIF
 1053       CONTINUE
          ENDIF
C
C  EFFECTIVE FULL FIN DEFLECTION FINSET 4
C
         IF(LFIN4.AND.(CFOC4(1).LT.1.))THEN
C  FIN4(112), NUMBER OF PANELS IN FINSET 4
            NF4=FIN4(112)
	    DO 1054 KPANL=1,NF4
               IF(ABS(DSYN4(KPANL)) .GT. UNUSED)THEN
      	         CALL FLAPS(MACH(IM),CFOC4,TCEFF4,
     1                 DEL4(KPANL),CHORDS4,XLAM4,XLMTE4,YUPER4,
     2                 SSPAN4,CNALP4,CAZRO4,SREF,DSYN4(KPANL),CLDEL)
                 CLD(4)=CLDEL
               ENDIF
 1054       CONTINUE
          ENDIF
C      
C***     DESIRE TRIM
C      
         IF(.NOT. LTRIM)GO TO 1060
C      
         TTRIM=LBODY .AND. (LFIN1 .OR. LFIN2 .OR. LFIN3 .OR. LFIN4)
         IF(.NOT. TTRIM)GO TO 1060
C      
         CALL TRIMIT(IM,TOTC)
C      
         GO TO 1090
C      
 1060    CONTINUE
C      

C***     BODY-FIN 1 THROUGH FIN 4 SYNTHESIS
C***     AND COMPUTE BETA DERIVATIVES
C      
         IF(LBODY .AND. (LFIN1 .OR. LFIN2 .OR. LFIN3 .OR. LFIN4))
     1     CALL BETADR(IM,TOTC)
C
C***     COMPUTE DYNAMIC DERIVATIVES IF DAMP IS INPUT
C
         IF(LDAMP) CALL DAMP2(IM,TOTC)
C     
C***     CHANGE ZCG FOR BODY AND FINS
C
         IF(ABS(ZCG) .LE. UNUSED)GO TO 1080
C     
         DO 1070 I=1,NALP
           IF(LFIN1.OR.LFIN2.OR.LFIN3.OR.LFIN4)THEN
               CALL ADDZCG(ZCG,LREF,F1CA(I),F1CM(I))
               CALL ADDZCG(ZCG,LATREF,F1CY(I),F1CLL(I))
               CALL ADDZCG(ZCG,LREF,F2CA(I),F2CM(I))
               CALL ADDZCG(ZCG,LATREF,F2CY(I),F2CLL(I))
               CALL ADDZCG(ZCG,LREF,F3CA(I),F3CM(I))
               CALL ADDZCG(ZCG,LATREF,F3CY(I),F3CLL(I))
               CALL ADDZCG(ZCG,LREF,F4CA(I),F4CM(I))
               CALL ADDZCG(ZCG,LATREF,F4CY(I),F4CLL(I))
           ELSE
C
C   REV 3/99 CORRECTION FOR BODY ALONE ADDED
C     
               CALL ADDZCG(ZCG,LREF,BCA(I),BCM(I))
               CALL ADDZCG(ZCG,LATREF,BCY(I),BCLL(I))
           ENDIF
C
 1070    CONTINUE
C      
 1080    CONTINUE
C      
C***     PRINT RESULTS
C      
C ... DUMP INTERNAL ARRAYS IF REQUIRED
C      
         CALL DUMPRT
C      
C ...  PRINT OUTPUTS
C      
         CALL PRINT(IM)
C      
 1090    CONTINUE
C      
 1100 CONTINUE
C      
      RETURN
      END
