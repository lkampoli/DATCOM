      SUBROUTINE READIN(GO,SAVE,IEND,ITERM)
C
C***  SUBROUTINE TO READ INPUTS FROM TAPE1 (GENERATED BY CONERR)
C***  AND PUT ON TAPE2 FOR READING BY NAMELIST READS.  THE CONTROL
C***  CARDS ARE ALSO READ AND THE PROGRAM FLAGS SET.
C
      LOGICAL GO,SAVE,IEND,SSAVE,IWARN,ITERM
      COMMON /INPCON/ LOC(11),LEN(11),NLNAME(56)
      COMMON /CASEID/ IDCASE(74),KOUNT,NAMSV(100),CASE,NOEXTR,NOLAT,
     1                IR,IPAGE
      COMMON /LOGIC/ LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,
     4               LELLB,LINLET,LEXPR,LICRMT,LSPIN,LARBOD
      LOGICAL        LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,
     4               LELLB,LINLET,LEXPR,LICRMT,LSPIN,LARBOD
C
      COMMON /DFLAGS/ DFLT,DREF,DAXI,DFIN1,DFIN2,DFIN3,DFIN4,DDEFL,
     1 DTRIM,DELLB,DINLET,DARBOD
      LOGICAL DFLT,DREF,DAXI,DFIN1,DFIN2,DFIN3,DFIN4,DDEFL,DTRIM,DELLB,
     1 DINLET,DARBOD
C
      COMMON /PARTF/ PARTS(19)
C      
      CHARACTER*4 KAND,NLNAME,IVNAME
      CHARACTER*4 IAST,ISAVE,NEXT,IBLANK,KOL
      LOGICAL PARTS
      DIMENSION KOL(80),NEXT(9),ISAVE(4),NAMORD(300)
      INTEGER CASE
      DATA IAST/'*   '/
      DATA ISAVE/'S   ','A   ','V   ','E   '/
      DATA NEXT/'N   ','E   ','X   ','T   ','    ','C   ',
     1 'A   ','S   ','E   '/
      DATA IBLANK / '    ' /
C
      jsave=0
      IF(IEND)GO TO 1160
      IWARN=.FALSE.
      IF(SAVE)GO TO 1000
      SSAVE=.FALSE.
      REWIND 2
      KOUNT=0
      GO TO 1020
C
C***  UNPACK PREVIOUSLY SAVED NAMELISTS
C
 1000 KK=KOUNT/3
      KK3=3*KK
      IF(KK3.NE.KOUNT)KK=KK+KOUNT-KK3
      I=1
      DO 1010 K=1,KK
         NAMORD(I+2)=NAMSV(K)/1000000
         NAMORD(I+1)=(NAMSV(K)-1000000*NAMORD(I+2))/1000
         NAMORD(I)=NAMSV(K)-1000*(NAMSV(K)/1000)
         I=I+3
 1010 CONTINUE
      JSAVE=KOUNT
C
      SSAVE=.TRUE.
 1020 SAVE=.FALSE.
      GO=.TRUE.
      NCARD=0
C
C***  READ DATA WRITTEN FROM CONERR
C
 1030 NCARD=NCARD+1
C
C***  FOLLOWING READ CARDS FOR FORTRAN IV
C
C     READ(8,1180)(KOL(I),I=1,80)
C     IF(EOF(1))1150,1040
 1040 CONTINUE
C
C***  FOLLOWING READ CARD FOR IBM MACHINES OR FORTRAN V
C
      READ(8,1180,END=1150)(KOL(I),I=1,80)
C
      IF(NCARD .EQ. 1 .AND. PARTS(18))CALL HEADR9
      IF(NCARD .EQ. 1 .AND. PARTS(18))WRITE(6,1190)
C
      IF(PARTS(18))WRITE(6,1200)(KOL(I),I=1,80)
      IF(KOL(1).EQ.IAST)GO TO 1030
C
C***  CHECK FOR NEXT CASE CARD
C
      DO 1050 I=1,9
         IF(KOL(I).NE.NEXT(I))GO TO 1070
 1050 CONTINUE
C
C***  SET-UP TO DELETE NAMELISTS READ IF REQUESTED
C
      DO 1060 K=1,JSAVE
C
C  FLTCON NAMELIST
C
         IF(DFLT .AND. NAMORD(K).EQ.1)NAMORD(K)=800+NAMORD(K)
C
C  REFQ NAMELIST
C
         IF(DREF .AND. NAMORD(K).EQ.2)NAMORD(K)=800+NAMORD(K)
C
C  AXIBOD NAMELIST
C
         IF(DAXI .AND. NAMORD(K).EQ.3)NAMORD(K)=800+NAMORD(K)
C
C  FIN SET 1 NAMELIST
C
         IF(DFIN1 .AND. NAMORD(K).EQ.104)NAMORD(K)=800+NAMORD(K)
C
C  FIN SET 2 NAMELIST
C
         IF(DFIN2 .AND. NAMORD(K).EQ.204)NAMORD(K)=800+NAMORD(K)
C
C  FIN SET 3 NAMELIST
C
         IF(DFIN3 .AND. NAMORD(K).EQ.304)NAMORD(K)=800+NAMORD(K)
C
C  FIN SET 4 NAMELIST
C
         IF(DFIN4 .AND. NAMORD(K).EQ.404)NAMORD(K)=800+NAMORD(K)
C
C  DEFLCT NAMELIST
C
         IF(DDEFL .AND. NAMORD(K).EQ.5)NAMORD(K)=800+NAMORD(K)
C
C  TRIM NAMELIST
C
         IF(DTRIM .AND. NAMORD(K).EQ.6)NAMORD(K)=800+NAMORD(K)
C
C  ELLBOD NAMELIST
C
         IF(DELLB .AND. NAMORD(K).EQ.7)NAMORD(K)=800+NAMORD(K)
C
C  INLET NAMELIST
C
         IF(DINLET .AND. NAMORD(K).EQ.8)NAMORD(K)=800+NAMORD(K)
C
C  ARBITRARY BODY NAMELIST
C
         IF(DARBOD .AND. NAMORD(K) .EQ.10)NAMORD(K)=800+NAMORD(K)
C
 1060 CONTINUE
      GO TO 1100
C
 1070 CONTINUE
C
C***  TEST FOR SAVE CARD
C
      DO 1080 I=1,4
         IF(KOL(I).NE.ISAVE(I))GO TO 1090
 1080 CONTINUE
      SAVE=.TRUE.
      GO TO 1030
C
 1090 CONTINUE
C
C***  IF COLUMN 1 IS NOT BLANK, THEN CONTROL CARD READ
C
      IF(KOL(1).NE.IBLANK)CALL CONTRL(KOL,CASE,SSAVE,IWARN)
      IF(KOL(1).NE.IBLANK)GO TO 1030
C
C***  OTHERWISE HAVE NAMELIST INPUT CARD
C
      CALL GETNLN(LOC,LEN,11,NLNAME,56,KOUNT,NAMORD,KOL,GO)
      WRITE(2,1180)(KOL(I),I=1,80)
      GO TO 1030
C
C***  START READING NAMELIST DATA FROM UNIT 2
C
 1100 CONTINUE
      IF(.NOT.GO)GO TO 1140
C
      CALL READNL(KOUNT,NAMORD)
C
C***  CHECK IF THIS IS A SAVE CASE
C
      IF(.NOT.SAVE)GO TO 1140
C
C***  SAVE PREVIOUS NAMELIST ORDER FOR READING IN NEXT CASE
C***  ARRAY NAMSV IS A PACKED ARRAY (THREE NAMELISTS PER WORD)
C
         KK=KOUNT
         DO 1110 I=1,2
            IF(3*(KK/3).EQ.KK)GO TO 1120
            KK=KK+1
            NAMORD(KK)=0
 1110    CONTINUE
 1120    K=1
         DO 1130 I=1,KK,3
            NAMSV(K)=NAMORD(I)+1000*NAMORD(I+1)+1000000*NAMORD(I+2)
         K=K+1
 1130    CONTINUE
 1140 CONTINUE
C
C***  DETERMINE IF SUFFICIENT NAMELISTS HAVE BEEN INPUT
C***  IN ORDER TO EXECUTE THE CASE
C
      CALL MAJERR(GO,IWARN)
C
C***  WRITE NAMELIST DATA IF REQUESTED
C
      IF(LNAME)CALL WRITNL
C
C***  WRITE MESSAGE IF GO = .FALSE.
C
      IF(.NOT.GO.AND.PARTS(18))WRITE(6,1220)
C
C***  CASE DATA READ, EXECUTE CASE
C
      SSAVE=.FALSE.
      GO TO 1170
C
C***  END-OF-FILE HIT, THIS IS THE LAST CASE
C
 1150 IEND=.TRUE.
      IF(NCARD.LE.1)GO=.FALSE.
      GO TO 1170
C
C***  END OF JOB
C
 1160 IF(PARTS(18))WRITE(6,1210)
C
      ITERM=.TRUE.
C
 1170 CONTINUE
 1180 FORMAT(80A1)
 1190 FORMAT(4X,'CASE INPUTS',/
     1 4X,'FOLLOWING ARE THE CARDS INPUT FOR THIS CASE',/)
 1200 FORMAT(1X,80A1)
 1210 FORMAT(4X,'*** END OF JOB ***')
 1220 FORMAT(/,'THIS CASE TERMINATED DUE TO INSUFFICIENT OR',
     1    ' ILLEGAL DATA INPUT')
      RETURN
      END
