      SUBROUTINE SUPPOT(IM,CAP,CNALP,CMALP,CAAA)
C
C***  SUBROUTINE TO COMPUTE THE POTENTIAL AERODYNAMIC CHARACTERISTICS
C***  OF BODIES AT SUPERSONIC SPEEDS (WAVE DRAG, CN AND CM)
C***  BASED ON THE USER SPECIFIED SREF, LREF AND XCG
C
C***  INPUT
C
C     IM -- MACH NUMBER INDEX
C
C***  OUTPUTS
C
C    CAP -- PRESSURE/WAVE AXIAL FORCE INCREMENT
C  CNALP -- NORMAL FORCE SLOPE, PER RADIAN
C  CMALP -- PITCHING MOMENT SLOPE, PER RADIAN
C   CAAA -- SECOND DERIVATIVE OF AXIAL FORCE WITH RESPECT TO
C           ANGLE OF ATTACK, PER RADIAN SQUARED
C
      COMMON /CONST/ PI,RAD,UNUSED,KAND
      COMMON /THERY/  LSOSE,PRESUR,LHYBRD,LHYPER
      COMMON /PARTF/ PARTS(19)
      LOGICAL LSOSE,PRESUR,LHYBRD,LHYPER,PARTS
      COMMON /FLC/    NALPHA,ALPHA(20),BETA,PHI,NMACH,MACH(20),
     1                ALT(20),REN(20),VINF(20),TINF(20),PINF(20)
      REAL NALPHA,NMACH,MACH
C
      COMMON /LOGIC/ LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
      LOGICAL        LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
C
      COMMON /REFQN/  SREF,LREF,LATREF,ROUGH,XCG,ZCG,SCALE,BLAYER,RHR
      REAL LREF,LATREF
C
      COMMON /GEOBOD/ SPNOSE,SWNOSE,VOLNOS,XCVNOS,XCPNOS,FRNOSE,
     1  THEOLN,THEOFN,SPCENT,SWCENT,VOLCEN,XCVCEN,XCPCEN,FRCENT,
     2  THEOLC,THEOFC,SPAFT ,SWAFT ,VOLAFT,XCVAFT,XCPAFT,FRAFT ,
     3  THEOLA,THEOFA,SPLAN ,SWET  ,VOL   ,XCENTV,XCENTP,FR    ,
     4                DBASE ,SBASE ,DMAX  ,SMAX  ,LTOTAL,GDUM(12)
C
      COMMON /ABODIN/ NX,XO,X(50),R(50),TNOSE,LNOSE,DNOSE,BNOSE,
     1                TRUNC,LCENTR,DCENTR,TAFT,LAFT,DAFT,
     2                POWER,DISCON(20),ELLIP(50),H(50),
     3                ENOSE,ECENTR,EAFT,DEXIT,ADUM(644)
C
      REAL NX,LNOSE,LCENTR,LAFT
      LOGICAL TRUNC,LHYB
C
      DIMENSION XX(50),RR(50),NNN(20),IROUT(2)
      DATA ZERO/ 0.0 /
      DATA ONE / 1.0 /
C
      NNX=NX+0.5
C
      CAAA=0.
      CAAAT=0.
      CAPT=0.
      CAT=0.
      CAWT=0.
      CMWT=0.
      CNWT=0.
      XCPT=0.
C
      IPRINT=0
      IF(PARTS(1).OR.PRESUR.OR.LPLOT) IPRINT=2
      IF(IPRINT.EQ.2) WRITE(9,1150)
C
      IF(LHYPER)GO TO 1050
C
C***  CHANGE BODY COORDINATES TO CALIBERS
C
      II=0
      III=0
      NSTART=1
C
C ... FOR SPHERICALLY BLUNTED NOSES, START AT POINT 6
C
      IF(BNOSE .GT. UNUSED .AND. .NOT.TRUNC)NSTART=6

      DO 1000 I=NSTART,50
         IF(I .LE. NNX)II=II+1
         III=III+1
         IF(I .LE. NNX)XX(II)=(X(I)-XO)/DMAX
         IF(I .LE. NNX)RR(II)=R(I)/DMAX
         IF(I .GT. NNX)XX(III)=UNUSED
         IF(I .GT. NNX)RR(III)=UNUSED
 1000 CONTINUE
      IF(XX(1) .LT. 0.)XX(1)=0.
      NNX=II
C
C***  TYPE OF BODY SHAPE
C
      NBLUNT=0
      IF(R(1) .LE. UNUSED)R(1)=0.
      IF(BNOSE .GT. UNUSED .AND. TRUNC)NBLUNT=2
      IF(BNOSE .GT. UNUSED .AND. .NOT.TRUNC)NBLUNT=1
C
      II=0
      NSEG=1
      NNN(1)=NNX
      DO 1005 J=2,20
         NNN(J)=0
 1005 CONTINUE
      IF(DISCON(1) .EQ. NX .OR. DISCON(1) .LE. UNUSED)GO TO 1020
C
C***  SET NUMBER OF POINTS BETWEEN DISCONTINUOUS POINTS
C
      II=1
      NNN(II)=DISCON(1)+0.5
      IF(TRUNC) NNN(II)=DISCON(2)-DISCON(1)+1.5
      IF(NBLUNT.EQ.1) NNN(II)=NNN(II)-(NSTART-1)
      IDS=2
      IF(TRUNC)IDS=3
      DO 1010 I=IDS,20
         IF(DISCON(I) .EQ. UNUSED .OR. DISCON(I) .EQ. 0)GO TO 1020
         II=II+1
         IF(II .GT. 19) II=19
         IF(II .LT. 19) NNN(II)=DISCON(I)-DISCON(I-1)
         IF(II .EQ. 19) NNN(19)=NNN(19)+DISCON(I)-DISCON(I-1)
 1010 CONTINUE
C
 1020 CONTINUE
C
      IF(II .GT. 1)NSEG=II
C
C***  USE SOSE IF USER REQUESTED
C
      IERROR=0
      IF(LSOSE)GO TO 1030
C
C***  OTHERWISE, USE THE HYBRID THEORY OF VAN DYKE
C
      LHYBRD=.TRUE.
      BNOSER=0.
      IF(BNOSE .GT. UNUSED)BNOSER=BNOSE/DMAX
C
      RNFTM=REN(IM)/MACH(IM)
C
      IF(BNOSE .GT. UNUSED)LHYBRD=.FALSE.
      IF(BNOSE .GT. UNUSED)GO TO 1030
C
      CALL HYBRID(IPRINT,XX,RR,FRNOSE,MACH(IM),RNFTM,ONE/RAD,DMAX,
     1 NBLUNT,BNOSER,NNX,CAW,CNW,CMW,IERROR)
C
C***  IF AN ERROR IN HYBRID THEORY IS NOTED, USE SOSE
C
      IF(IERROR .NE. 0)LHYBRD=.FALSE.
      IF(IERROR .NE. 0)GO TO 1030
C
C***  CORRECT DERIVATIVES TO PER RADIAN MEASURE
C
      CAAA=0.
      CAP=CAW
      CNALP=CNW*RAD
      CMALP=CMW*RAD
      XCP=CMALP/CNALP
C
      GO TO 1040
C
 1030 CALL SOSE(ZERO,MACH(IM),XX,RR,NNX,NNN,IPRINT,
     1 NBLUNT,NSEG,CAP,XCP,CNALP,CMALP,CAAA,DMAX)
C
 1040 CONTINUE
C
C***  REFERENCE DATA TO USER SPECIFIED SREF AND LREF
C
      CAP=CAP*(PI*DMAX*DMAX/4.)/SREF
      CNALP=CNALP*(PI*DMAX*DMAX/4.)/SREF
      CMALP=CMALP*(PI*DMAX*DMAX*DMAX/4.)/(SREF*LREF)
      CAAA=CAAA*(PI*DMAX*DMAX/4.)/SREF
C
C***  REFERENCE CM TO XCG
C
      CMALP=CMALP+CNALP*(XCG-XO)/LREF
      GO TO 1060
C
C***  HYPERSONIC FLOW THEORY
C
 1050 CALL HYPERS(ONE,MACH(IM),X,R,NNX,SREF,LREF,XCG-XO,IPRINT,
     1 CAP,CNALP,CMALP)
      CNALP=CNALP*RAD
      CMALP=CMALP*RAD
C
 1060 IF((.NOT. PRESUR) .AND. (.NOT. LPLOT))GO TO 1080
C
C***  DUMP PRESSURE DISTRIBUTIONS
C
      NALP=NALPHA+0.5
      IPRINT=1
      IERRR=0
      LHYB=.FALSE.
      IF(LHYBRD)LHYB=.TRUE.
      DO 1070 I=1,NALP
         IF(ALPHA(I) .LT. 0.)GO TO 1070
         IF(ALPHA(I) .GT. 15. .AND. .NOT. LHYPER)GO TO 1080
         WRITE(10,1100) MACH(IM),ALPHA(I)
         WRITE(12,1170) MACH(IM)
         IF(LHYPER)CALL HYPERS(ALPHA(I),MACH(IM),X,R,NNX,SREF,LREF,
     1             XCG-XO,IPRINT,CAT,CNALPT,CMALPT)
         IF(LHYPER)GO TO 1070
C
         IF(.NOT. LHYB)
     1   CALL SOSE(ALPHA(I),MACH(IM),XX,RR,NNX,NNN,IPRINT,
     2          NBLUNT,NSEG,CAPT,XCPT,CNALPT,CMALPT,CAAAT,DMAX)
         IF(LHYB)
     1   CALL HYBRID(IPRINT,XX,RR,FRNOSE,MACH(IM),RNFTM,ALPHA(I)/RAD,
     2          DMAX,NBLUNT,BNOSER,NNX,CAWT,CNWT,CMWT,IERRR)
         IF(IERRR .NE. 0)LHYB=.FALSE.
 1070 CONTINUE
C
 1080 CONTINUE
 1100 FORMAT('ZONE T="BODY CP AT MACH=',F6.2,' ALPHA=',F6.2,'"')
 1150 FORMAT('ZONE T="BODY GEOMETRY IN FEET"')
 1170 FORMAT('ZONE T="BODY CP, MLOCAL AT MACH=',F6.2,' ALPHA= 0.0"')
C
      RETURN
      END
