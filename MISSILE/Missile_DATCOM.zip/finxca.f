      SUBROUTINE FINXCA(NSET,IM,GFIN1,FDATA1,F1WK,CFIN1)
C
C***  FIN SET 1 AXIAL FORCE EXECUTIVE
C
      COMMON /THERY/  LSOSE,PRESUR,LHYBRD,LHYPER
      LOGICAL LSOSE,PRESUR,LHYBRD,FAIL
C
      COMMON /REFQN/  SREF,LREF,LATREF,ROUGH,XCG,ZCG,SCALE,BLAYER,RHR
C
      REAL LREF,LATREF
C
      COMMON /FLC/    NALPHA,ALPHA(20),BETA,PHI,NMACH,MACH(20),
     1                ALT(20),REN(20),VINF(20),TINF(20),PINF(20)
      COMMON /CONST/  PI,RAD,UNUSED,KAND
C
      COMMON /PARTF/ PARTS(19)
      LOGICAL PARTS
      COMMON /LOGIC/ LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
      LOGICAL        LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
C
      REAL NALPHA,NMACH,MACH
C
      DIMENSION GFIN1(188),FDATA1(389),F1WK(270),CFIN1(220)
      DIMENSION CANL(20),IROUT(2)
C
      CAPR=0.0
      CAWT=0.0
      CAWS=0.0
      CALE=0.0
      NPCHRD=2
      NPSPAN=2
      FAIL=.FALSE.
C
C***  SKIN FRICTION
C
      CALL SKINF(MACH(IM),REN(IM),GFIN1(184),ROUGH,BLAYER,
     1           GFIN1(175),SREF,1.,1.,1.,CAFRIC)
C
C***  SUBSONIC PRESSURE DRAG
C
      IF(MACH(IM) .LT. 1.4)CALL FINCAP(MACH(IM),GFIN1(188),
     1      F1WK(2),CAFRIC,CAPR)
C
C***  TRANSONIC WAVE DRAG
C
      IF(MACH(IM) .LT. 1.05)CALL FCAWT(MACH(IM),2.*GFIN1(174),
     1   F1WK(2),2.*GFIN1(171),GFIN1(180),SREF,CAWT)
C
C***  BASE DRAG INCREMENT (ALL SPEEDS)
C
C ... FIND LAST SECTION STATION
C
      DO 1000 I=1,50
         IF(FDATA1(I+112) .EQ. UNUSED)GO TO 1010
         NPCHRD=I
 1000 CONTINUE
C
 1010 CONTINUE
C
C ... COMPUTE FIN BASE AREA
C
      SBASE=2.*FDATA1(NPCHRD+212)*GFIN1(184)*GFIN1(173)
C
      CALL FINCAB(MACH(IM),SBASE,SREF,CABASE)
C
C***  COMPUTE L.E. BLUNTNESS AND WAVE DRAG USING POTENTIAL FLOW
C***  IF THE AIRFOIL IS DIAMOND, DOUBLE WEDGE OR CIRCULAR ARC
C***  IF THE AIRFOIL TYPE IS NACA OR USER DEFINED USE DATCOM
C
      SECTYP=FDATA1(1)
      IF(MACH(IM) .GE. 1.4 .AND. (SECTYP .EQ. 0. .OR. SECTYP .EQ. 2.))
     1 GO TO 1040
C
C***  HERE FOR TRANSONIC SPEEDS, OR NACA OR USER DEFINED SHAPES
C
C ... LEADING EDGE DRAG
C
C   REV 3/99 CORRECT FIN SPAN FOR LE DRAG CALCULATION, GFIN1(173)
C
 1020 CALL FCALE(MACH(IM),GFIN1(179),F1WK(1),GFIN1(173),SREF,CALE)
C
      IF(FAIL)GO TO 1030
C
      IF(MACH(IM) .GT. 0.8 .AND. (SECTYP .EQ. 0. .OR. SECTYP .EQ. 2.))
     1 GO TO 1040
C
C ... SUPERSONIC WAVE DRAG
C
 1030 IF(MACH(IM) .GE. 1.05 .OR. FAIL)CALL FCAWS(MACH(IM),F1WK(3),
     1   GFIN1(176),GFIN1(174),SREF,GFIN1(179),CAWS)
      IF(MACH(IM) .GE. 1.05 .AND. FAIL)CAWT=0.
      GO TO 1080
C
C***  HERE FOR POTENTIAL FLOW ANALYSIS (SUPERSONIC SPEEDS)
C
 1040 CONTINUE
C
C ... LAST SEMI-SPAN STATION INPUT
C
      DO 1050 I=2,10
         IF(FDATA1(I+51) .EQ. UNUSED)GO TO 1060
         NPSPAN=I
 1050 CONTINUE
C
 1060 CONTINUE
C
      CR=FDATA1(52)
      TAPER=GFIN1(172)
      IF(TAPER .EQ. 0.)TAPER=0.001
      CT=CR*TAPER
      B=2.*GFIN1(173)
      CR1=CR*FDATA1(12)
      CR2=CR-CR1-CR*FDATA1(22)
      CT1=CR1*TAPER
      CT2=CR2*TAPER
      TRC=2.*FDATA1(62)
      TTC=2.*FDATA1(NPSPAN+61)
      IF(TTC .LE. UNUSED)TTC=0.001
      RLER=FDATA1(364)
      RLET=FDATA1(NPSPAN+363)
      RTER=FDATA1(NPCHRD+212)*GFIN1(184)/2.
      RTET=RTER
      IF(RLER .GE. TRC*CR/2.)RLER=0.99*TRC*CR/2.
      IF(RLET .GE. TTC*CT/2.)RLET=0.99*TTC*CT/2.
      IF(RTER .GE. TRC*CR/2.)RTER=0.99*TRC*CR/2.
      IF(RTET .GE. TTC*CT/2.)RTET=0.99*TTC*CT/2.
      SWEEP=GFIN1(179)
      IF(ABS(SWEEP) .LE. UNUSED)SWEEP=1.0
C
      IF(MACH(IM) .LT. 1.05)GO TO 1070
C
      CALL FCAWPF(CR, CT, B, CR1, CR2, CT1, CT2, RLER, RLET,
     1            RTER, RTET, TRC, TTC, SWEEP, MACH(IM), SREF,
     2            SECTYP, PRESUR, NSET, CAWP, CALE, FAIL)
      IF(FAIL .AND. PARTS(18))WRITE(6,1120)
      IF(FAIL)GO TO 1020
C
      CAWS=CAWP-CALE
C
      GO TO 1080
C
 1070 CALL FCAWPF(CR, CT, B, CR1, CR2, CT1, CT2, RLER, RLET,
     1            RTER, RTET, TRC, TTC, SWEEP, 1.05, SREF,
     2            SECTYP, PRESUR, NSET, CAWP, CALET, FAIL)
      IF(FAIL .AND. PARTS(18))WRITE(6,1120)
      IF(FAIL)GO TO 1020
C
      CAWT=(CAWP-CALET)*4.*(MACH(IM)-0.8)
C
C***  AXIAL FORCE AT ALPHA = 0.0
C
 1080 CAO=CAFRIC+CAPR+CAWT+CAWS+CABASE+CALE
C
      F1WK(207)=CAO
C
C***  AXIAL FORCE AT ANGLE OF ATTACK
C
      NALP=NALPHA+0.5
C
      NFINS=FDATA1(112)+.5
C
      RADLE=F1WK(1)
C
      DO 1090 I=1,NALP
         CALL FCALP(NALP,ALPHA,F1WK(125),CAO,2.*GFIN1(174),
     1   FDATA1(112),2.*GFIN1(171),SREF,MACH(IM),REN(IM),RADLE,
     2   GFIN1(179),GFIN1(172),ALPHA(I),CANL(I))
         F1WK(I+207)=CANL(I)/2.
         CANL(I)=CANL(I)/2.
 1090 CONTINUE
C
      DO 1110 I=1,NALP
         DO 1100 N=1,NFINS
            PHIF=FDATA1(N+381)
            AEQ=ABS(ALPHA(I)*SIN(PHIF/RAD))
            CALL LNTRP(ALPHA,CANL,NALP,AEQ,CAALP)
            CFIN1(I+40)=CFIN1(I+40)+CAO*COS(ALPHA(I)/RAD)+CAALP
 1100    CONTINUE
 1110 CONTINUE
C
      IF(PARTS(NSET+6))CALL FAPART(IM,NSET,NFINS,CAFRIC,
     1 CAPR,CAWT,CAWS,CALE,CABASE,CAO,CANL,CFIN1(41))
C
 1120 FORMAT(4X,'FIN PRESSURE DIST. CANNOT BE CALCULATED',
     1 ' DATCOM METHOD USED FOR WAVE DRAG')
C
      RETURN
      END
