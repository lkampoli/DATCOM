      SUBROUTINE FINFIN(MACH,AR,CR,SPAN,TAPER,RADF,ISURF,A14,A24,
     1                  A34,A44,L12,L24)
C
C  SUBROUTINE TO DETERMINE DELTA-ALPHA-EQUIVALENT OF A DEFLECTED
C  FIN IN THE PRESENCE OF ADJACENT CRUCIFORM FINS
C  NOTE: THE FIN IS ASSUMED TO HAVE NO TRAILING EDGE SWEEP
C
C  METHOD FROM NEAR TR 125
C
C  REV 3/99 ROUTINE REVISED TO CORRECT L12 CALCULATION
C
C *** INPUTS ***
C   MACH - FREESTREAM MACH NUMBER
C     AR - EXPOSED FIN ASPECT RATIO
C     CR - FIN EXPOSED ROOT CHORD
C   SPAN - SPAN OF TWO FINS (INCLUDES BODY)
C  TAPER - FIN EXPOSED TAPER RATIO
C   RADF - BODY RADIUS AT FIN
C  ISURF - TYPE OF SURFACES: 1=PLANAR, 2=CRUCIFORM
C
C *** OUTPUTS ***
C
C    A14 - DELTA ALPHA EQUIVALENT FOR FIN #1 DUE TO FIN #4
C    A24 - DELTA ALPHA EQUIVALENT FOR FIN #2 DUE TO FIN #4
C    A34 - DELTA ALPHA EQUIVALENT FOR FIN #3 DUE TO FIN #4
C    A44 - DELTA ALPHA EQUIVALENT FOR FIN #4 DUE TO FIN #4
C
      REAL MACH,L12,L24,MU
C
      COMMON /CONST/ PI,RAD,UNUSED,KAND
C
      DIMENSION TDB(11),T14(11),T24(11),T34(11),T44(11),IROUT(2)
C
      DATA TDB/0.,.1,.2,.3,.4,.5,.6,.7,.8,.9,1./
      DATA T14/-.275,-.230,-.188,-.149,-.112,-.0784,-.0498,
     1         -.0272,-.0115,-.0027,0./
      DATA T24/-.0789,-.0731,-.0658,-.0567,-.0460,-.0343,-.0230,-.0130,
     1         -.00566,-.00134,0./
      DATA T34/-.275,-.230,-.188,-.149,-.112,-.0784,-.0498,
     1         -.0272,-.0115,-.0027,0./
      DATA T44/.921,.890,.878,.879,.889,.905,.925,.946,.966,
     1         .984,1./
C
      ACOSH(U)=ALOG(U+SQRT(U*U-1.))
      ASINH(U)=ALOG(U+SQRT(U*U+1.))
C
      DOB=2.*RADF/SPAN
      L12=1.0
      L24=1.0
C
C  SKIP CALCULATIONS IF SUBSONIC
C
      IF(MACH.LE.1.) GO TO 1030
C
C  DETERMINE ADJACIENT FIN FACTOR, L12
C
      IF(ISURF .LE. 1) GO TO 1020
C
C  CHECK FOR NO INTERFERENCE
C
      L12=0.
      BETA=SQRT(MACH**2-1.)
      C=PI/2.-1.
      IF((CR/(BETA*RADF)-1.).LT.C) GO TO 1020
C
C  PARTIAL INTERFERENCE
C
      SM    = SPAN/2.
      XSTAR = RADF*BETA*(1.+SQRT((SM/RADF-1.)**2+C**2))
C
C  CHECK FOR LEADING EDGE INTERSECTION
C
      IF(XSTAR.GT.0..AND.XSTAR.LT.((1.-TAPER)*CR)) THEN
      XU=BETA*RADF*(1.+SQRT(1.-(1.-C**2)*(1.-BETA**2*RADF**2*
     1 (SM/RADF-1.)**2/(CR**2*(1.-TAPER)**2))))/(1.-BETA**2*RADF**2
     2 *(SM/RADF-1.)**2/(CR**2*(1.-TAPER)**2))
      ETAU=XU/(BETA*RADF)-1.
      L12=1.-XU**2*AR/(4.*CR*(1.-TAPER)*(SM-RADF))+BETA*AR
     1 /(4.*(SM/RADF-1.)**2)*(ETAU*SQRT(ETAU**2-C**2)-C**2*
     2 ACOSH(ETAU/C))
C
C  CHECK FOR TIP INTERSECTION
C
      ELSEIF(XSTAR.GE.((1.-TAPER)*CR).AND.XSTAR.LE.CR) THEN
      L12=BETA*AR/(2.*(SM/RADF-1.)**2)*(.5*((SM/RADF-1.)*
     1 SQRT((SM/RADF-1.)**2+C**2)-C**2*ASINH((SM/RADF-1.)/C))+
     2 (SM/RADF-1.)*((CR/(BETA*RADF)-1.)-SQRT((SM/RADF-1.)**2+C**2)))
C
C  OTHERWISE HAVE TRAILING EDGE INTERSECTION
C
      ELSEIF(CR.GT.XSTAR) THEN
      L12=BETA*AR/(4.*(SM/RADF-1.)**2)*((CR/(BETA*RADF)-1.)*
     1 SQRT((CR/(BETA*RADF)-1.)**2-C**2)-C**2*ACOSH((CR/(BETA*RADF)-
     2 1.)/C))
      ENDIF
C
 1020 CONTINUE
C
C  DETERMINE OPPOSING FIN FACTOR, L24
C
      CALL BETAU(CR,RADF,C,SM,TAPER,ISURF,BU)
      MU = SQRT(BU*BU+1.0)
      L24= (MU-MACH)/(MU-1.0)
C
      IF(L12 .LT. 0.0) L12=0.0
      IF(L24 .LT. 0.0) L24=0.0
C
C  SPLINE INTERFERENCE TABLES
C
 1030 CONTINUE
      CALL SPLINE(TDB,T14,11,2,2,0.,0.,DOB,1,A14,DUM)
      CALL SPLINE(TDB,T24,11,2,2,0.,0.,DOB,1,A24,DUM)
      CALL SPLINE(TDB,T34,11,2,2,0.,0.,DOB,1,A34,DUM)
      CALL SPLINE(TDB,T44,11,2,2,0.,0.,DOB,1,A44,DUM)
C
      RETURN
      END
