      SUBROUTINE SUBEXP(EXPFLG,RMACH,ICONF,ARRAY)
C
C***  GET THE USER INPUT EXPERIMENTAL DATA FROM UNIT 2.
C***  THE DATA FOR THE CONFIGURATION DESIRED IS FIRST CONVERTED
C***  TO THE CORRECT REFERENCE AREAS/LENGTHS, ADJUSTED TO THE CORRECT
C***  C.G., AND THEN INTERPOLATED AT THE ANGLES OF ATTACK REQUIRED.
C
C***  INPUTS
C
C  IFOUND - 1 IF NO DATA FOUND, 0 IF DATA IS FOUND
C   RMACH - MACH NUMBER OF DATA DESIRED
C   ICONF - CONFIGURATION CODE
C           1=BODY, 2=F1,   3=F2,    4=F3,    5=F4,
C           6=BF1,  7=BF12, 8=BF123, 9=BF1234
C
C***  OUTPUT
C
C   EXPFLG - ARRAY OF FLAGS TO DETERMINE WHICH COEFFICIENTS (CN,CM,CA,
C            CY,CSN,CSL RESPECTIVELY) HAVE EXPERIMENTAL INPUT 1=INPUT
C   ARRAY - ARRAY WHERE DATA IS TO BE PLACED
C           STRUCTURE OF ARRAY IS -
C            1 - 20 CN
C           21 - 40 CM
C           41 - 60 CA
C           61 - 80 CY
C           81 -100 CSN
C          101 -120 CSL
C
      COMMON /CONST/ PI,RAD,UNUSED,KAND
      COMMON /REFQN/ SREFR,LREFR,LATR,ROUGH,XCGR,ZCGR,SCALE,BLAYER,RHR
      COMMON /FLC/   NALPHR,ALPHAR(20),BETA,PHI,NMACHR,MACHR(20),
     1               ALT(20),REN(20),VINF(20),TINF(20),PINF(20)
C
      REAL LREF,LATREF,LREFR,LATR,NALPHR,NMACHR,MACHR,NALPHA
      INTEGER EXPFLG
C
      COMMON /LOGIC/ LFLAG(28)
      LOGICAL LFLAG
C
      COMMON /F1WORK/ F1WK(290)
      COMMON /F2WORK/ F2WK(290)
      COMMON /F3WORK/ F3WK(290)
      COMMON /F4WORK/ F4WK(290)
      COMMON /SFIN1/ FIN1(220)
      COMMON /SFIN2/ FIN2(220)
      COMMON /SFIN3/ FIN3(220)
      COMMON /SFIN4/ FIN4(220)
      COMMON /SBODY/ BODY(220)
C
      DIMENSION ARRAY(120),CN(20),CM(20),CA(20),CY(20),CSN(20),CSL(20),
     1          ALPHA(20),IROUT(2),CNF(20),CMF(20),EXPFLG(6),ALPW(20)
C
C***  IS EXPERIMENTAL DATA INPUT
C
      IFOUND=1
      IF(.NOT. LFLAG(25))GO TO 1120
C
C***  SEARCH FOR EXPERIMENTAL DATA
C
      REWIND 2
C
C***  LOOP UNTIL ALL DATA HAS BEEN READ
C
 1000 CALL REXPR(RMACH,ICONF,IFOUND,SREF,LREF,LATREF,XCG,ZCG,
     1    NALPHA,ALPHA,CN,CM,CA,CY,CSN,CSL)
C
      IF(IFOUND .NE. 0)GO TO 1120
C
C***  DATA FOUND, POST-PROCESS DATA
C
C***  CONVERT FROM USER SPECIFIED UNITS TO FEET
C
      CALL CONVRT(SREF,1,-2)
      CALL CONVRT(LREF,1,-1)
      CALL CONVRT(LATREF,1,-1)
      CALL CONVRT(XCG,1,-1)
      CALL CONVRT(ZCG,1,-1)
C
C***  VERIFY NONZERO REFERENCE AREA AND LENGTHS
C
      IF(SREF   .LE. UNUSED)SREF=SREFR
      IF(LREF   .LE. UNUSED)LREF=LREFR
      IF(LATREF .LE. UNUSED)LATREF=LATR
      IF(XCG    .EQ. UNUSED)XCG=XCGR
      IF(ZCG    .EQ. UNUSED)ZCG=ZCGR
      IF(NALPHA .LE. UNUSED)NALPHA=NALPHR
C
C***  CHANGE SREF, LREF AND/OR LATREF OF DATA TO MATCH PREDICTION
C
      DXCG=XCGR-XCG
      DZCG=ZCGR-ZCG
C
      NA=NALPHA+.5
C
      DO 1050 I=1,NA
         IF(SREF .EQ. SREFR)GO TO 1010
            IF(CN (I) .NE. UNUSED)CN (I)=CN (I)*SREF/SREFR
            IF(CA (I) .NE. UNUSED)CA (I)=CA (I)*SREF/SREFR
            IF(CY (I) .NE. UNUSED)CY (I)=CY (I)*SREF/SREFR
            IF(CM (I) .NE. UNUSED)CM (I)=CM (I)*SREF/SREFR
            IF(CSN(I) .NE. UNUSED)CSN(I)=CSN(I)*SREF/SREFR
            IF(CSL(I) .NE. UNUSED)CSL(I)=CSL(I)*SREF/SREFR
 1010    IF(LREF .EQ. LREFR)GO TO 1020
            IF(CM (I) .NE. UNUSED)CM (I)=CM (I)*LREF/LREFR
 1020    IF(LATREF .EQ. LATR)GO TO 1030
            IF(CSN(I) .NE. UNUSED)CSN(I)=CSN(I)*LATREF/LREFR
            IF(CSL(I) .NE. UNUSED)CSL(I)=CSL(I)*LATREF/LREFR
 1030    IF(DXCG .EQ. 0.)GO TO 1040
            IF(CM (I) .NE. UNUSED .AND. CN (I) .NE. UNUSED)
     1         CM (I)=CM (I)+DXCG*CN(I)/LREFR
            IF(CSN(I) .NE. UNUSED .AND. CY (I) .NE. UNUSED)
     1         CSN(I)=CSN(I)+DXCG*CY(I)/LREFR
 1040    IF(DZCG .EQ. 0.)GO TO 1050
            IF(CM (I) .NE. UNUSED .AND. CA (I) .NE. UNUSED)
     1         CM (I)=CM (I)+DZCG*CA(I)/LREFR
            IF(CSL(I) .NE. UNUSED .AND. CA (I) .NE. UNUSED)
     1         CSL(I)=CSL(I)+DZCG*CA(I)/LREFR
 1050 CONTINUE
C
C***  INTERPOLATE AT PREDICTED ANGLES OF ATTACK
C
      MM=NALPHR+.5
      DO 1080 I=1,MM
         IF(CN (1) .EQ. UNUSED)GO TO 1060
         CALL LNTRP(ALPHA,CN ,NA,ALPHAR(I),ARRAY(I    ))
         CNF(I)=ARRAY(I)
 1060    IF(CM (1) .EQ. UNUSED)GO TO 1070
         CALL LNTRP(ALPHA,CM ,NA,ALPHAR(I),ARRAY(I+20 ))
         CMF(I)=ARRAY(I+20)
 1070    IF(CA (1) .NE. UNUSED)
     1      CALL LNTRP(ALPHA,CA ,NA,ALPHAR(I),ARRAY(I+40 ))
         IF(CY (1) .NE. UNUSED)
     1      CALL LNTRP(ALPHA,CY ,NA,ALPHAR(I),ARRAY(I+60 ))
         IF(CSN(1) .NE. UNUSED)
     1      CALL LNTRP(ALPHA,CSN,NA,ALPHAR(I),ARRAY(I+80 ))
         IF(CSL(1) .NE. UNUSED)
     1      CALL LNTRP(ALPHA,CSL,NA,ALPHAR(I),ARRAY(I+100))
 1080 CONTINUE
C
C     CHECK TO SEE WHICH COEFFICIENTS HAVE BEEN INPUT AND SET THE FLAG
C
      IF(CN(1) .NE. UNUSED)EXPFLG(1)=1
      IF(CM(1) .NE. UNUSED)EXPFLG(2)=1
      IF(CA(1) .NE. UNUSED)EXPFLG(3)=1
      IF(CY(1) .NE. UNUSED)EXPFLG(4)=1
      IF(CSN(1) .NE. UNUSED)EXPFLG(5)=1
      IF(CSL(1) .NE. UNUSED)EXPFLG(6)=1
C
C***  FOR FIN ALONE EXPERIMENTAL DATA, CORRECT PANEL DATA
C
      IF(ICONF .LT. 2 .OR. ICONF .GT. 5)GO TO 1110
C
C      DIFFERENTIATE CN AND CM TO DETERMINE FIN ALONE CNA AND CMA
C        AND UPDATE FIN IOM COMMON BLOCKS
C
      DO 1090 I=1,20
         IF(ICONF .EQ. 2 .AND. CN(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CNF,MM,ALPHAR(I),CNFINT,FIN1(I+120))
         IF(ICONF .EQ. 2 .AND. CM(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CMF,MM,ALPHAR(I),CMFINT,FIN1(I+140))
         IF(ICONF .EQ. 3 .AND. CN(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CNF,MM,ALPHAR(I),CNFINT,FIN2(I+120))
         IF(ICONF .EQ. 3 .AND. CM(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CMF,MM,ALPHAR(I),CMFINT,FIN2(I+140))
         IF(ICONF .EQ. 4 .AND. CN(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CNF,MM,ALPHAR(I),CNFINT,FIN3(I+120))
         IF(ICONF .EQ. 4 .AND. CM(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CMF,MM,ALPHAR(I),CMFINT,FIN3(I+140))
         IF(ICONF .EQ. 5 .AND. CN(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CNF,MM,ALPHAR(I),CNFINT,FIN4(I+120))
         IF(ICONF .EQ. 5 .AND. CM(1) .NE. UNUSED)
     1     CALL POLINT(ALPHAR,CMF,MM,ALPHAR(I),CMFINT,FIN4(I+140))
 1090 CONTINUE
C
C ***   UPDATE COMMON BLOCK FWORK (PANEL ALONE BLOCKS)
C
C
C     LINES ADDED TO ACCOUNT FOR NON-ZERO CMO AND ALPHA-ZERO NORMAL
C     FORCE (ONLY ACCOUNTS FOR FIN ALONE CMO. WILL NOT ACCOUNT FOR 
C     BODY+FIN CMO AS CODED)
C
      AOL = 0.0
      IF(CN(1) .NE. UNUSED)CALL LNTRP(CN,ALPHA,NA,0.0,AOL)
      IF(CM(1) .NE. UNUSED)CALL LNTRP(ALPHA,CM,NA,AOL,CMO)
      IF(ABS(AOL) .LT. 0.0001)GO TO 1101
C
C     DETERMINE CURRENT MACH NUMBER
C
      NM = NMACHR + 0.5
      DO 1091 I=1,NM
         IF(RMACH .EQ. MACHR(I))IM=I
 1091 CONTINUE
C
      IF(ICONF .EQ. 2)THEN
        F1WK(269)   = AOL
        F1WK(43+IM) = CMO
      ELSEIF(ICONF .EQ. 3)THEN
        F2WK(269)   = AOL
        F2WK(43+IM) = CMO
      ELSEIF(ICONF .EQ. 4)THEN
        F3WK(269)   = AOL
        F3WK(43+IM) = CMO
      ELSEIF(ICONF .EQ. 5)THEN
        F4WK(269)   = AOL
        F4WK(43+IM) = CMO
      ENDIF
C
C --- FWK(248-267) ('INTERPOLATED CN FOR PANEL CHARACTERISTICS') 
C     IS RELATIVE TO AOL.  THERFORE SUBTRACT CN AT ALPHA=0 FROM
C     EXPERIMENTAL CN BEFORE INTERPOLATING AT ANGLES OF ATTACK
C     IN FWK(228-247) ARRAY
C
C     FWK(208-227) SAME FOR CA AS CN
C
      DO 1095 I=1,NA
        ALPW(I)   = ALPHA(I) - AOL
 1095 CONTINUE
C
      DO 1100 I=1,20
         IF(ICONF .EQ. 2 .AND. CN(1) .NE. UNUSED)
     1      CALL LNTRP(ALPW,CN,NA,F1WK(I+227),F1WK(I+247))
         IF(ICONF .EQ. 3 .AND. CN(1) .NE. UNUSED)
     1      CALL LNTRP(ALPW,CN,NA,F2WK(I+227),F2WK(I+247))
         IF(ICONF .EQ. 4 .AND. CN(1) .NE. UNUSED)
     1      CALL LNTRP(ALPW,CN,NA,F3WK(I+227),F3WK(I+247))
         IF(ICONF .EQ. 5 .AND. CN(1) .NE. UNUSED)
     1      CALL LNTRP(ALPW,CN,NA,F4WK(I+227),F4WK(I+247))
 1100 CONTINUE
C
 1101 CONTINUE
      IF(CA(1).EQ.UNUSED) GO TO 1110
      DO 1109 I=1,MM
         IF(ICONF.NE.2) GO TO 1102
            F1WK(207)=0.0
            CALL POLINT(ALPW,CA,NA,ALPHAR(I),F1WK(I+207),CAA)
 1102    IF(ICONF.NE.3) GO TO 1103
            F2WK(207)=0.0
            CALL POLINT(ALPW,CA,NA,ALPHAR(I),F2WK(I+207),CAA)
 1103    IF(ICONF.NE.4) GO TO 1104
            F3WK(207)=0.0
            CALL POLINT(ALPW,CA,NA,ALPHAR(I),F3WK(I+207),CAA)
 1104    IF(ICONF.NE.5) GO TO 1105
            F4WK(207)=0.0
            CALL POLINT(ALPW,CA,NA,ALPHAR(I),F4WK(I+207),CAA)
 1105    CONTINUE
 1109 CONTINUE
 1110  GO TO 1000
C
 1120 CONTINUE
C
      RETURN
      END
