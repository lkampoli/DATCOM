      SUBROUTINE CALIB(ITYPE,NEXP,EALP,EXP,NPRED,PALP,PRED,CORR)
C
C***  CALIBRATE THE PREDICTIONS TO CORRESPOND TO THE EXPERIMENTAL
C***  DATA.  THE CALIBRATION FACTORS ARE BASED UPON LINEAR
C***  INTERPOLATION OF THE DATA.
C
C***  INPUTS
C  ITYPE - TYPE OF CORRECTION WANTED
C          -1=ADDER                        (CONSTANT AT ALPHA=0.)
C           1=ADDER                        (TABLE)
C          -2=MULTIPLIER                   (CONSTANT AT ALPHA=0.)
C           2=MULTIPLIER                   (TABLE)
C          -3=MULTIPLIER USING LOCAL SLOPE (CONSTANT AT ALPHA=0.)
C           3=MULTIPLIER USING LOCAL SLOPE (TABLE)
C           4=CORR IS THEORETICAL SLOPE AT ALPHA=0
C   NEXP - NUMBER OF EXPERIMENTAL DATA POINTS
C   EALP - EXPERIMENTAL ANGLE OF ATTACK TABLE
C    EXP - EXPERIMENTAL DATA
C  NPRED - NUMBER OF PREDICTED DATA POINTS
C   PALP - PREDICTED ANGLE OF ATTACK TABLE
C   PRED - PREDICTED DATA
C
C***  OUTPUTS
C
C   CORR - CORRECTION
C
      DIMENSION EALP(NEXP),EXP(NEXP),PALP(NPRED),PRED(NPRED),CORR(NPRED)
C
      IF(IABS(ITYPE) .EQ. 2)GO TO 1020
      IF(IABS(ITYPE) .EQ. 3)GO TO 1050
      IF(IABS(ITYPE) .EQ. 4)GO TO 1075
C
C***  ADDER CORRECTIONS
C
      IF(ITYPE .EQ. 1)GO TO 1000
C
C***  HERE FOR A CONSTANT AT ALPHA=0. (ITYPE=-1)
C
      CALL LNTRP(EALP,EXP ,NEXP ,0.,TEXP )
      CALL LNTRP(PALP,PRED,NPRED,0.,TPRED)
      CORR(1)=TEXP-TPRED
      GO TO 1080
C
C***  HERE FOR AN ADDER AS A FUNCTION OF ALPHA (ITYPE=1)
C
 1000 CONTINUE
      DO 1010 I=1,NPRED
         CALL LNTRP(EALP,EXP ,NEXP ,PALP(I),TEXP )
         CALL LNTRP(PALP,PRED,NPRED,PALP(I),TPRED)
         CORR(I)=TEXP-TPRED
 1010 CONTINUE
      GO TO 1080
C
C***  MULTIPLIER CORRECTIONS
C
 1020 CONTINUE
      IF(ITYPE .EQ. 2)GO TO 1030
C
C***  MULTIPLIER CONSTANT AT ALPHA=0. (ITYPE=-2)
C
      CALL LNTRP(EALP,EXP ,NEXP ,0.,TEXP )
      CALL LNTRP(PALP,PRED,NPRED,0.,TPRED)
      CORR(1)=TEXP/TPRED
      GO TO 1080
C
C***  HERE FOR AN MULTIPLIER AS A FUNCTION OF ALPHA (ITYPE=2)
C
 1030 CONTINUE
      DO 1040 I=1,NPRED
         CALL LNTRP(EALP,EXP ,NEXP ,PALP(I),TEXP )
         CALL LNTRP(PALP,PRED,NPRED,PALP(I),TPRED)
         IF(TPRED .EQ. 0.)CORR(I)=0.
         IF(TPRED .EQ. 0.)GO TO 1040
         CORR(I)=TEXP/TPRED
 1040 CONTINUE
      GO TO 1080
C
C***  HERE FOR MULTIPLIER AS A FUNCTION OF SLOPE
C
 1050 CONTINUE
      IF(ITYPE .EQ. 3)GO TO 1060
C
C***  HERE FOR MULTIPLIER BASED ON SLOPE AT ALPHA=0.
C
      CALL LNTRP(EALP,EXP ,NEXP ,0.,TEXP1 )
      CALL LNTRP(PALP,PRED,NPRED,0.,TPRED1)
      CALL LNTRP(EALP,EXP ,NEXP ,1.,TEXP2 )
      CALL LNTRP(PALP,PRED,NPRED,1.,TPRED2)
      TEXP=TEXP2-TEXP1
      TPRED=TPRED2-TPRED1
      CORR(1)=TEXP/TPRED
      GO TO 1080
C
C***  HERE FOR MULTIPLIER BASED ON LOCAL SLOPE
C
 1060 DO 1070 I=1,NPRED
         CALL LNTRP(EALP,EXP ,NEXP ,PALP(I)   ,TEXP1 )
         CALL LNTRP(PALP,PRED,NPRED,PALP(I)   ,TPRED1)
         CALL LNTRP(EALP,EXP ,NEXP ,PALP(I)+1.,TEXP2 )
         CALL LNTRP(PALP,PRED,NPRED,PALP(I)+1.,TPRED2)
         TEXP=TEXP2-TEXP1
         TPRED=TPRED2-TPRED1
         CORR(I)=TEXP/TPRED
 1070 CONTINUE
      GO TO 10 80
C
C*** HERE FOR SLOPE AT ZERO ALPHA
C
 1075 CONTINUE
      CALL LNTRP(PALP,PRED,NPRED,0.,TPRED1)
      CALL LNTRP(PALP,PRED,NPRED,1.,TPRED2)
      CORR(1)=TPRED2-TPRED1
C
C***  EXIT
C
 1080 CONTINUE
C
      RETURN
      END
