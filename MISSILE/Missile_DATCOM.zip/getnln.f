      SUBROUTINE GETNLN(LOC,LEN,NC,NLNAME,NN,KOUNT,NAMORD,KOL,GO)
C
C***  SUBROUTINE TO READ NAMELIST CARDS AND DETERMINE TYPE
C
      COMMON /LOGIC/  LFLAG(28)
      COMMON /CONST/  PI,RAD,UNUSED,KAND
C
      CHARACTER*4 NUM,IBLANK,KOL,KAND,NLNAME
C
      DIMENSION LOC(NC),LEN(NC),NLNAME(NN),NAMORD(300),KOL(80)
      DIMENSION NUM(10)
      LOGICAL GO,LFLAG
      DATA NUM/'1   ','2   ','3   ','4   ','5   ','6   ','7   ',
     1 '8   ','9   ','0   '/
      DATA IBLANK / '    ' /
C
C***  IF COLUMN 2 IS NOT KAND, IS CONTINUATION CARD
C
      IF(KOL(2).NE.KAND)GO TO 1080
C
C***  DECODE NAME
C
      DO 1010 I=1,NC
         JUMP=I
         LADD=LOC(I)
         LADDM1=LADD-1
         LLEN=LEN(I)
            DO 1000 J=1,LLEN
               JJ=J+LADDM1
               IF(KOL(J+2).NE.NLNAME(JJ))GO TO 1010
 1000       CONTINUE
C
C***  NAME FOUND
C
         GO TO 1040
C
 1010 CONTINUE
C
C***  NAME NOT FOUND
C
C
C***  CHECK IF REST OF CARD BLANK
C
      DO 1020 I=3,80
         IF(KOL(I).NE.IBLANK)GO TO 1030
 1020 CONTINUE
      GO TO 1040
C
C***  ERROR
C
 1030 CONTINUE
      GO=.FALSE.
      GO TO 1080
C
C***  NAME FOUND, SAVE SEQUENCE NUMBER
C
 1040 CONTINUE
C
C***  JUMP = 1 IS FOR $END, IGNORE
C
      IF(JUMP.EQ.1)GO TO 1080
      IF(JUMP.NE.5)GO TO 1070
C
C***  HERE FOR NAMELIST FINSET(N)
C
C***  DECODE VALUE FOR N AND ADD TO SEQUENCE
C
      DO 1050 I=1,10
          INUM=I
          IF(KOL(LLEN+3).EQ.NUM(I))GO TO 1060
 1050 CONTINUE
C
C***  ERROR
C
      GO TO 1030
 1060 JUMP=JUMP+100*INUM
C
C***  BLANK OUT FINSET NUMBER FOR NAMELIST READ
C
      IF(INUM.LE.4)KOL(LLEN+3)=IBLANK
 1070 CONTINUE
C
C***  SUBTRACT 1 TO ACCOUNT FOR FIRST NAMELIST NAME TESTED IS INVALID
C
      KOUNT=KOUNT+1
      NAMORD(KOUNT)=JUMP-1
 1080 CONTINUE
      IF(JUMP .EQ. 10)LFLAG(25)=.TRUE.
C
      RETURN
      END
