      SUBROUTINE TRIMIT(IM,TOTC)
C
C***  CONFIGURATION TRIM ROUTINE
C
C  MODIFIED BY K. BURNS, MCDONNELL DOUGLAS
C
      COMMON /CONST/ PI,RAD,UNUSED,KAND
      COMMON /REFQN/ SREF,REFQ(8)
      COMMON /CASEID/ IDCASE(74),KOUNT,NAMSV(100),CASE,NOEXTR,NOLAT,
     1                IR,IPAGE
      COMMON /FLC/    NALPHA,ALPHA(20),BETA,PHI,NMACH,MACH(20),
     1                ALT(20),REN(20),VINF(20),TINF(20),PINF(20)
      COMMON /FSET1/  FS1(381),PHIF1(8),CFOC1(10)
      COMMON /FSET2/  FS2(381),PHIF2(8),CFOC2(10)
      COMMON /FSET3/  FS3(381),PHIF3(8),CFOC3(10)
      COMMON /FSET4/  FS4(381),PHIF4(8),CFOC4(10)
C
      COMMON /GEOFS1/ GFIN1(188)
      COMMON /GEOFS2/ GFIN2(188)
      COMMON /GEOFS3/ GFIN3(188)
      COMMON /GEOFS4/ GFIN4(188)
C
      COMMON /F1WORK/ F1WK(290)
      COMMON /F2WORK/ F2WK(290)
      COMMON /F3WORK/ F3WK(290)
      COMMON /F4WORK/ F4WK(290)
C
C FIX TO PASS CORRECT DELTAS TO SYNTHS
C
      COMMON /FFINDL/ DELTA1(8),DELTA2(8),DELTA3(8),DELTA4(8),CLD(4)
C
      COMMON /INCID/  DTEMP(32),XHINGE(4),SKEW(4)
      COMMON /TRIMIN/ SET,PANL1,PANL2,PANL3,PANL4,PANL5,PANL6,PANL7,
     1                PANL8,DELMIN,DELMAX,ASY(8)
      COMMON /UTRIMD/ CNT(200),CMT(200),CAT(200),CYT(200),
     1                CLNT(200),CLLT(200)
      COMMON /TRIMD/  DELTRM(20),CNTRM(20),CATRM(20),
     1                CYTRM(20),CLNTRM(20),CLLTRM(20)
      COMMON /SB1/    CB1(220)
      COMMON /SB12/   CB12(220)
      COMMON /SB123/  CB123(220)
      COMMON /SB1234/ CB1234(220)
      COMMON /PARTF/  PARTS(19)
      COMMON /LOGIC/ LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
      LOGICAL        LDMPCS,LDAMP,LBUILD,LNACA,LDERDG,
     1               LDERRD,LPART,LNAME,LPLOT,
     2               LFLT,LREFQ,LAXIS,LFIN1,LFIN2,LFIN3,LFIN4,
     3               LDEFL,LTRIM,LDIMIN,LDIMFT,LDIMCM,LDIMM,LELLB,
     4               LINLET,LEXPR,LICRMT,LSPIN,LARBOD
C
      REAL NALPHA,NMACH,MACH
      LOGICAL PANL1,PANL2,PANL3,PANL4,PANL5,PANL6,PANL7,PANL8,
     1        LPARTS,ASY,NOEXTR,NOLAT,NOLATS,PANLL,PARTS,PARTSS
C
      DIMENSION DELTAS(8,4),IROUT(2),DELTAB(10),CMUT(10),COEF(10)
      DIMENSION CMTRM(20),PANLL(8),PARTSS(16),IDUM(3,4),TOTC(80)
C
      EQUIVALENCE (PANL1,PANLL(1)),(PANL2,PANLL(2)),(PANL3,PANLL(3))
      EQUIVALENCE (PANL4,PANLL(4)),(PANL5,PANLL(5)),(PANL6,PANLL(6))
      EQUIVALENCE (PANL7,PANLL(7)),(PANL8,PANLL(8))
C
C***  TURN OFF PART AND NOLAT FLAGS
C
      LPARTS=LPART
      DO 1000 I=1,16
         PARTSS(I)=PARTS(I)
         PARTS(I)=.FALSE.
 1000 CONTINUE
      LPART=.FALSE.
      NOLATS=NOLAT
      NOLAT=.TRUE.
C
C***  IF DEFLECTIONS ARE NOT INPUT, SET TO ZERO
C
      DO 1010 I=1,8
         IF(DELTA1(I) .EQ. UNUSED)DELTA1(I)=0.
         IF(DELTA2(I) .EQ. UNUSED)DELTA2(I)=0.
         IF(DELTA3(I) .EQ. UNUSED)DELTA3(I)=0.
         IF(DELTA4(I) .EQ. UNUSED)DELTA4(I)=0.
 1010 CONTINUE
C
      NALP=NALPHA+0.5
C
C***  DETERMINE TRIM RANGE OF DEFLECTIONS
C
      DELLO=AMIN1(DELMIN,DELMAX)
      DELHI=AMAX1(DELMIN,DELMAX)
C
C ... IF RANGE NOT INPUT OR IDENTICAL, SET DEFAULTS
C
      IF(DELLO .EQ. UNUSED)DELLO=0.
      IF(DELHI .EQ. UNUSED)DELHI=0.
      IF(DELLO .NE. DELHI)GO TO 1020
      DELLO=-25.
      DELHI=20.
C
 1020 CONTINUE
C
C***  WANT 10 DEFLECTION ANGLES
C
      DDELTA=(DELHI-DELLO)/9.
C
C***  SAVE INPUT DEFLECTION ANGLES
C
      DO 1030 I=1,8
         DELTAS(I,1)=DELTA1(I)
         DELTAS(I,2)=DELTA2(I)
         DELTAS(I,3)=DELTA3(I)
         DELTAS(I,4)=DELTA4(I)
 1030 CONTINUE
C
C***  DETERMINE CONFIGURATION
C
      NSETS=0
      IF(LFIN1)NSETS=NSETS+1
      IF(LFIN1.AND.LFIN2)NSETS=NSETS+1
      IF(LFIN1.AND.LFIN2.AND.LFIN3)NSETS=NSETS+1
      IF(LFIN1.AND.LFIN2.AND.LFIN3.AND.LFIN4)NSETS=NSETS+1
C
C***  SET FOR TRIMMING
C
      NSET=SET+0.5
      IF(NSET .LE. 0 .OR. NSET .GT. 4)NSET=1
C
C ... DEFAULT PANELS TO DEFLECT
C
      IF(PANL1 .OR. PANL2 .OR. PANL3 .OR. PANL4 .OR. PANL5
     1   .OR. PANL6 .OR. PANL7 .OR. PANL8)GO TO 1040
      PANL2=.TRUE.
      PANL4=.TRUE.
C
 1040 CONTINUE
C
C***  LOOP FOR EACH DEFLECTION ANGLE
C
      DO 1110 L=1,10
         DELT=(L-1)*DDELTA+DELLO
         DELTAB(L)=DELT
C
         GO TO (1050,1060,1070,1080),NSET
C
 1050    DO 1052 II=1,8
            IF(PANLL(II) .AND. PHIF1(II).LE.180.)DELTA1(II)=DELT
            IF(PANLL(II) .AND. PHIF1(II).GT.180.)DELTA1(II)=-DELT
      IF(CFOC1(1).LT.1. .AND. DELTA1(II).NE.0.) THEN
         CALL FLAPS(MACH(IM),CFOC1,GFIN1(176),DELTA1(II),
     1              FS1(52),GFIN1(179),GFIN1(183),FS1(263),
     2              FS1(2),F1WK(64),F1WK(207),SREF,ANS,TEMP)
         DELTA1(II)=ANS
      ENDIF
            IF(ASY(II))DELTA1(II)=-DELTA1(II)
 1052    CONTINUE
C
         GO TO 1090
C
 1060    DO 1062 II=1,8
            IF(PANLL(II) .AND. PHIF2(II).LE.180.)DELTA2(II)=DELT
            IF(PANLL(II) .AND. PHIF2(II).GT.180.)DELTA2(II)=-DELT
      IF(CFOC2(1).LT.1. .AND. DELTA2(II).NE.0.) THEN
         CALL FLAPS(MACH(IM),CFOC2,GFIN2(176),DELTA2(II),
     1              FS2(52),GFIN2(179),GFIN2(183),FS2(263),
     2              FS2(2),F2WK(64),F2WK(207),SREF,ANS,TEMP)
         DELTA2(II)=ANS
      ENDIF
            IF(ASY(II))DELTA2(II)=-DELTA2(II)
 1062    CONTINUE
C
         GO TO 1090
C
 1070    DO 1072 II=1,8
            IF(PANLL(II) .AND. PHIF3(II).LE.180.)DELTA3(II)=DELT
            IF(PANLL(II) .AND. PHIF3(II).GT.180.)DELTA3(II)=-DELT
      IF(CFOC3(1).LT.1. .AND. DELTA3(II).NE.0.) THEN
         CALL FLAPS(MACH(IM),CFOC3,GFIN3(176),DELTA3(II),
     1              FS3(52),GFIN3(179),GFIN3(183),FS3(263),
     2              FS3(2),F3WK(64),F3WK(207),SREF,ANS,TEMP)
         DELTA3(II)=ANS
      ENDIF
            IF(ASY(II))DELTA3(II)=-DELTA3(II)
 1072    CONTINUE
C
         GO TO 1090
C
 1080    DO 1082 II=1,8
            IF(PANLL(II) .AND. PHIF4(II).LE.180.)DELTA4(II)=DELT
            IF(PANLL(II) .AND. PHIF4(II).GT.180.)DELTA4(II)=-DELT
      IF(CFOC4(1).LT.1. .AND. DELTA4(II).NE.0.) THEN
         CALL FLAPS(MACH(IM),CFOC4,GFIN4(176),DELTA4(II),
     1              FS4(52),GFIN4(179),GFIN4(183),FS4(263),
     2              FS4(2),F4WK(64),F4WK(207),SREF,ANS,TEMP)
         DELTA4(II)=ANS
      ENDIF
            IF(ASY(II))DELTA4(II)=-DELTA4(II)
 1082    CONTINUE
C
 1090    CONTINUE
C
C***  SYNTHESIS THE CONFIGURATION
C
         CALL SYNTHS(IM,TOTC,IDUM,0.)
         CALL BLKLDD(IDUM)
C
C***     SAVE CALCULATIONS IN UTRIMD ARRAY
C
         DO 1100 I=1,NALP
            INDX=(L-1)*20+I
            IF(NSETS .EQ. 4)CNT(INDX)=CB1234(I)
            IF(NSETS .EQ. 4)CMT(INDX)=CB1234(I+20)
            IF(NSETS .EQ. 4)CAT(INDX)=CB1234(I+40)
            IF(NSETS .EQ. 4)CYT(INDX)=CB1234(I+60)
            IF(NSETS .EQ. 4)CLNT(INDX)=CB1234(I+80)
            IF(NSETS .EQ. 4)CLLT(INDX)=CB1234(I+100)
            IF(NSETS .EQ. 3)CNT(INDX)=CB123(I)
            IF(NSETS .EQ. 3)CMT(INDX)=CB123(I+20)
            IF(NSETS .EQ. 3)CAT(INDX)=CB123(I+40)
            IF(NSETS .EQ. 3)CYT(INDX)=CB123(I+60)
            IF(NSETS .EQ. 3)CLNT(INDX)=CB123(I+80)
            IF(NSETS .EQ. 3)CLLT(INDX)=CB123(I+100)
            IF(NSETS .EQ. 2)CNT(INDX)=CB12(I)
            IF(NSETS .EQ. 2)CMT(INDX)=CB12(I+20)
            IF(NSETS .EQ. 2)CAT(INDX)=CB12(I+40)
            IF(NSETS .EQ. 2)CYT(INDX)=CB12(I+60)
            IF(NSETS .EQ. 2)CLNT(INDX)=CB12(I+80)
            IF(NSETS .EQ. 2)CLLT(INDX)=CB12(I+100)
            IF(NSETS .EQ. 1)CNT(INDX)=CB1(I)
            IF(NSETS .EQ. 1)CMT(INDX)=CB1(I+20)
            IF(NSETS .EQ. 1)CAT(INDX)=CB1(I+40)
            IF(NSETS .EQ. 1)CYT(INDX)=CB1(I+60)
            IF(NSETS .EQ. 1)CLNT(INDX)=CB1(I+80)
            IF(NSETS .EQ. 1)CLLT(INDX)=CB1(I+100)
 1100    CONTINUE
C
 1110 CONTINUE
C
C***  FIND CM=0. AT EACH ANGLE OF ATTACK
C
      DO 1170 IALP=1,NALP
C
C***  EXTRACT CM DATA AT EACH DEFLECTION
C
         DO 1120 IDEF=1,10
            INDX=(IDEF-1)*20+IALP
            CMUT(IDEF)=CMT(INDX)
 1120    CONTINUE
C
C***  CHECK FOR SIGN FLIP ON CM DATA
C
      IF(CMUT(1) .EQ. 0.)GO TO 1140
C
         DO 1130 I=2,10
            II=I
            IF(CMUT(I) .EQ. 0.)GO TO 1140
            IF(CMUT(I)/ABS(CMUT(I)) .NE. CMUT(I-1)/ABS(CMUT(I-1)))
     1         GO TO 1140
 1130    CONTINUE
C
C ...    SIGN FLIP NOT PRESENT, CANNOT TRIM
C
         DELTRM(IALP)=UNUSED
         CNTRM(IALP)=UNUSED
         CMTRM(IALP)=UNUSED
         CATRM(IALP)=UNUSED
         CYTRM(IALP)=UNUSED
         CLNTRM(IALP)=UNUSED
         CLLTRM(IALP)=UNUSED
         GO TO 1170
C
 1140    CONTINUE
         IF(CMUT(II) .EQ. 0.)DELTRM(IALP)=DELTAB(II)
C
C***     LINEARILY COMPUTE DELTA TRIM AT THIS ANGLE OF ATTACK
C
         IF(CMUT(II) .NE. 0.)
     1     DELTRM(IALP)=(DELTAB(II-1)-DELTAB(II))/(CMUT(II)-CMUT(II-1))
     2                  *CMUT(II-1)+DELTAB(II-1)
         CMTRM(IALP)=0.
C
         DTRM=DELTRM(IALP)
C
C***  INTERPOLATE AT TRIM DEFLECTION FOR ALL COEFFICIENTS
C
         DO 1160 ICOEF=1,6
C
            IF(ICOEF .EQ. 2)GO TO 1160
C
            DO 1150 IDEF=1,10
               INDX=(IDEF-1)*20+IALP
               IF(ICOEF .EQ. 1)COEF(IDEF)=CNT(INDX)
               IF(ICOEF .EQ. 3)COEF(IDEF)=CAT(INDX)
               IF(ICOEF .EQ. 4)COEF(IDEF)=CYT(INDX)
               IF(ICOEF .EQ. 5)COEF(IDEF)=CLNT(INDX)
               IF(ICOEF .EQ. 6)COEF(IDEF)=CLLT(INDX)
 1150       CONTINUE
C
            IF(ICOEF .EQ. 1)
     1      CALL LNTRP(DELTAB,COEF,10,DTRM,CNTRM(IALP))
            IF(ICOEF .EQ. 3)
     1      CALL LNTRP(DELTAB,COEF,10,DTRM,CATRM(IALP))
            IF(ICOEF .EQ. 4)
     1      CALL LNTRP(DELTAB,COEF,10,DTRM,CYTRM(IALP))
            IF(ICOEF .EQ. 5)
     1      CALL LNTRP(DELTAB,COEF,10,DTRM,CLNTRM(IALP))
            IF(ICOEF .EQ. 6)
     1      CALL LNTRP(DELTAB,COEF,10,DTRM,CLLTRM(IALP))
C
 1160    CONTINUE
C
 1170 CONTINUE
C
C***  RESTORE INPUT DATA AND FLAGS
C
      LPART=LPARTS
      DO 1180 I=1,16
         PARTS(I)=PARTSS(I)
 1180 CONTINUE
      NOLAT=NOLATS
      DO 1190 I=1,8
         DELTA1(I)=DELTAS(I,1)
         DELTA2(I)=DELTAS(I,2)
         DELTA3(I)=DELTAS(I,3)
         DELTA4(I)=DELTAS(I,4)
 1190 CONTINUE
C
C***  DUMP UNTRIMMED DATA IF REQUIRED
C
      CALL DUMPRT
C
      IF(PARTS(12))CALL PLTUT9(IM,DELTAB,DELTA1,DELTA2,DELTA3,DELTA4,
     1 NSET,PANL1,PANL2,PANL3,PANL4)
C
      IF(LPLOT)CALL PLTTRM(IM)
C
C***  PRINT TRIMMED RESULTS
C
      CALL PRITRM(IM,NSET,DELTAB,PANL1,PANL2,PANL3,PANL4,PANL5,PANL6,
     1  PANL7,PANL8,DELTRM,CNTRM,CMTRM,CATRM,CYTRM,CLNTRM,CLLTRM)
C
      RETURN
      END
