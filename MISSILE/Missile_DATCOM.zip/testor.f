      SUBROUTINE TESTOR(ISEQ,GO,END,KOL,L,NAM,K,IER,LEN,LDM,NUM,NAMES,
     1 NNAM,SUBED)
C
C***  SUBROUTINE TO TEST CORRECT SPELLING OF NAMELIST VARIABLES
C***  AND TO CHECK SYNTAX
C
      COMMON /CONST/  PI,RAD,UNUSED,KAND
      COMMON /PARTF/  PARTS(19)
      LOGICAL PARTS
      DIMENSION KOL(80), LEN(NUM), LDM(NUM), NAMES(NNAM)
      DIMENSION NUMBER(15), TRUE(4), FALSE(5)
      LOGICAL END, FLAG, ARRAY, FOUND, NMTEST, GO, SUBED
C
      CHARACTER*4 KAND,NUMBER,TRUE,FALSE,BLANK,EQUAL,COMMA,KOL,NAMES
C
      DATA NUMBER / '0   ','1   ','2   ','3   ','4   ',
     1       '5   ','6   ','7   ','8   ','9   ','+   ','-   ',
     2       '.   ','*   ','E   '/
      DATA TRUE  / 'T   ','R   ','U   ','E   '/
      DATA FALSE / 'F   ','A   ','L   ','S   ','E   '/
      DATA BLANK / '    '/
      DATA EQUAL / '=   '/
      DATA COMMA / ',   '/
C
      NA = 0
      NB = 0
      NC = 0
      ND = 0
      NE = 0
      NF = 0
C
C ... IF VARIABLE SUBSTITUTED, INHIBIT REPRINTING OF INPUT CARD
C ... THIS OPTION CAN BE REACTIVITATED BY REMOVING THE C IN
C ... COLUMN 1 OF THE CARD BELOW AND THE FORMAT 1260
C
C       IF(SUBED.AND.PARTS(17))WRITE(6,1260) (KOL(J),J=1,80)
C
C***  UNKNOWN NAMELIST NAME - WRITE CARD AND RETURN
C
      IF(IER .EQ. 0) GO TO 1000
        IF(PARTS(17))WRITE(6,1180) ISEQ,(KOL(J),J=1,80)
        GO TO 1175
 1000 CONTINUE
C
C***  END CARD - WRITE CARD AND RETURN
C
      IF(NAM .GE. 2) GO TO 1010
        IF(PARTS(17))WRITE(6,1190) ISEQ,(KOL(J),J=1,80)
        END = .TRUE.
        GO TO 1170
 1010 CONTINUE
C
C***  INSERT END CARD IF REQUIRED
C
      FLAG = (K .EQ. 1) .AND. (.NOT. END)
      IF(.NOT. FLAG) GO TO 1020
        IF(PARTS(17))WRITE(6,1200)  KAND
        WRITE(8,1210) KAND, (BLANK,J=1,75)
        END = .TRUE.
 1020 CONTINUE
C
C***  FIRST CARD DOES NOT CONTAIN NAMELIST NAME - WRITE CARD AND RETURN
C
      FLAG = (K .EQ. 2) .AND. END
      IF(.NOT. FLAG) GO TO 1030
        IF(PARTS(17))WRITE(6,1220) ISEQ,(KOL(J),J=1,80), KAND
        GO TO 1170
 1030 CONTINUE
C
C***  TEST FOR VALID VARIABLE NAME STARTING IN KOL(L)
C
      IF(K .EQ. 1) END = .FALSE.
      IF(KOL(L) .NE. BLANK) GO TO 1040
        L = L+1
        IF(L .GE. 81) GO TO 1160
        GO TO 1030
 1040 CONTINUE
      IF(KOL(L) .EQ. KAND) END = .TRUE.
      IF(END) GO TO 1160
      CALL VNAME(KOL,L,LEN,NUM,NAMES,NNAM,I,FOUND,ARRAY,NDMS,NF,NUMBER,
     1           BLANK,EQUAL)
      IF(FOUND) GO TO 1110
C
C***  NAME NOT FOUND, IF K=2 CHECK FOR NUMBER CONTINUATION
C***                  IF K=1 SEARCH FOR NEXT NAME
C
      IF(K .EQ. 1) GO TO 1060
        NDMS = NDML
        NDML = 0
        DO 1050 J=1,14
        IF(KOL(L) .EQ. NUMBER(J)) GO TO 1140
 1050   CONTINUE
 1060 CONTINUE
      IS = I
      NA = NA+1
 1070 CONTINUE
      IF(L .GE. 81) GO TO 1160
      IF(KOL(L) .EQ. KAND) GO TO 1040
      FLAG = (KOL(L) .EQ. BLANK) .OR. (KOL(L) .EQ. EQUAL) .OR.
     1       (KOL(L) .EQ. COMMA)
      IF(FLAG) GO TO 1080
        L = L+1
        GO TO 1070
 1080 CONTINUE
      IF(L .GE. 81) GO TO 1160
      DO 1090 J=1,15
      IF(KOL(L) .EQ. NUMBER(J)) GO TO 1100
 1090 CONTINUE
      FLAG = (KOL(L) .EQ. BLANK) .OR. (KOL(L) .EQ. EQUAL) .OR.
     1       (KOL(L) .EQ. COMMA)
      IF(FLAG) GO TO 1100
      IF(NMTEST(KOL(L),TRUE,4)) L = L+3
      IF(NMTEST(KOL(L),TRUE,4)) GO TO 1100
      IF(NMTEST(KOL(L),FALSE,5)) L = L+4
      IF(NMTEST(KOL(L),FALSE,5)) GO TO 1100
      IF(KOL(L-1) .EQ. NUMBER(15)) L = L-1
      GO TO 1030
 1100 CONTINUE
      L = L+1
      GO TO 1080
C
C***  NAME FOUND - SET UP ARRAY DESIGNATION AND CHECK NAME DELIMITERS
C
 1110 CONTINUE
      IS = I
      NDM = IABS(LDM(I))
      NDML = 0
      FLAG = ARRAY .AND. (NDM .EQ. 1)
      IF (.NOT. FLAG) GO TO 1120
        ARRAY = .FALSE.
        NC = NC+1
 1120 CONTINUE
      IF(L .GE. 80) GO TO 1130
      IF(KOL(L) .NE. BLANK) GO TO 1130
        L = L+1
        GO TO 1120
 1130 CONTINUE
      IF(KOL(L) .NE. EQUAL) NB = NB+1
      IF(KOL(L) .EQ. EQUAL) L = L+1
C
C***  CHECK NUMERICAL INPUT AND THE NUMBER OF ARRAY
C***  ELEMENTS INPUT
C
 1140 CONTINUE
      I = IS
      IF(I .EQ. 0) GO TO 1070
      IF(L .GE. 81) GO TO 1160
      IF(KOL(L) .NE. BLANK) GO TO 1150
        L = L+1
        GO TO 1140
 1150 CONTINUE
      IF(LDM(I) .LT. 0) CALL LVALUE(KOL,L,NDML,NF,BLANK,
     1                             COMMA,NUMBER)
      IF(LDM(I) .GT. 0) CALL RVALUE(KOL,L,NDML,NF,BLANK,
     1                             COMMA,NUMBER)
C
C***  CHECK THE NUMBER OF VALUES LOADED TO THE VARIABLE DIMENSION
C
      IF(NDML .EQ. 0) GO TO 1080
      IF(NDM .EQ. 1 .AND. NDML .GT. 1) ND = ND+1
      NDML = NDML+NDMS
      IF(NDM .GT. 1 .AND. NDML .GT. NDM) NE = NE+1
      IF(L .LE. 80) GO TO 1030
C
C***  END OF CARD OR END OF INPUT ENCOUNTERED
C
 1160 CONTINUE
      NERR = NA+NB+NC+ND+NE+NF
      IF(NERR .EQ. 0 .AND. .NOT.SUBED .AND. PARTS(17))
     1 WRITE(6,1190)ISEQ,(KOL(J),J=1,80)
      IF(NERR .NE. 0 .AND. PARTS(17))
     1 WRITE(6,1230)ISEQ,(KOL(J),J=1,80), NA, NB,
     2                              NC, ND, NE, NF
      IF(NA.NE.0 .OR. NB.NE.0 .OR. NC.NE.0 .OR.
     1   ND.NE.0 .OR. NE.NE.0)GO=.FALSE.
      IF((NA.NE.0 .OR. NB.NE.0 .OR. NC.NE.0 .OR.
     1   ND.NE.0 .OR. NE.NE.0) .AND. PARTS(17))WRITE(6,1250)
 1170 WRITE(8,1240) (KOL(J),J=1,80)
C
 1175 CONTINUE
C
      SUBED=.FALSE.
C
C***  FORMATS
C
 1180 FORMAT(1X,I3,1X,80A1,/,8X,'** ERROR ** UNKNOWN NAMELIST NAME')
 1190 FORMAT(1X,I3,1X,80A1)
 1200 FORMAT(6X,A1,'END',18X,'** MISSING NAMELIST TERMINATION',
     1       ' ADDED **')
 1210 FORMAT(1X,A1,'END',75A1)
 1220 FORMAT(1X,I3,1X,80A1,/,8X,'** ERROR ** NO NAMELIST NAME',
     1  ' FOLLOWING',A2)
 1230 FORMAT(1X,I3,1X,80A1,/,8X,'** ERROR **',I3,'*A',I3,'*B',
     1       I3,'*C',I3,'*D',I3,'*E',I3,'*F')
 1240 FORMAT(80A1)
 1250 FORMAT(8X,'* FATAL ERROR *')
C1260 FORMAT(5X,80A1,/,8X,'** REVISED CARD IMAGE')
C
      RETURN
      END
