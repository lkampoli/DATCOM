      SUBROUTINE SPLINE(X,Y,N,K1,K2,DY1,DY2,XP,NP,YP,DYDXP)
C
C  SUBROUTINE TO INTERPOLATE USING CUBIC SPLINES
C
C  *** INPUTS ***
C
C     X --- ARRAY OF INDEPENDENT VARIABLES (OF LENGTH N)
C     Y --- ARRAY OF DEPENDENT VARIABLES (OF LENGTH N)
C     N --- NUMBER OF INPUT VARIABLES TO BE SPLINED
C    K1 --- IF 1, DY1 IS FIRST DERIVATIVE AT LOWER END OF TABLE
C           IF 2, DY1 IS SECOND DERIVATIVE AT LOWER END OF TABLE
C    K2 --- IF 1, DY2 IS FIRST DERIVATIVE AT UPPER END OF TABLE
C           IF 2, DY2 IS SECOND DERIVATIVE AT UPPER END OF TABLE
C   DY1 --- DERIVATIVE AT LOWER END OF TABLE
C   DY2 --- DERIVATIVE AT UPPER END OF TABLE
C
C    XP --- ARRAY OF X POINTS TO BE INTERPOLATED (OF LENGTH NP)
C    NP --- NUMBER OF OUTPUT POINTS TO BE INTERPOLATED
C
C  *** OUTPUTS ***
C
C    YP --- ARRAY OF Y OUTPUTS AT EACH XP POINT (OF LENGTH NP)
C DYDXP --- ARRAY OF LOCAL SLOPES (DY/DX) AT EACH POINT XP (OF LENGTH NP
C
C  NOTE: PRESENTLY DIMENSIONED FOR N=100. FOR LARGER ARRAYS
C        ADJUST DIMENSIONS OF A AND B ARRAYS TO BE (2*N)
C
      DIMENSION A(200),B(200),X(N),Y(N),XP(NP),YP(NP),DYDXP(NP)
C
      N1=N-2
      C1=X(2)-X(1)
      IF(K1 .EQ. 2)GO TO 1000
      B(1)=0.
      A(1)=(DY1-(Y(2)-Y(1))/C1)/C1
      GO TO 1010
 1000 B(1)=-C1
      A(1)=-DY1/2.
 1010 J=1
      IF(N .EQ. 2)GO TO 1040
      DO 1020 I=1,N1
      J=J+1
      C1=X(I+1)-X(I)
      C2=X(I+2)-X(I+1)
      C3=Y(I+1)-Y(I)
      C4=Y(I+2)-Y(I+1)
      C5=C3/C1-C4/C2
      C6=C1/C2
      C7=C1*C2
      B(J)=1./(C6*(C1-B(J-1)))
      A(J)=(C5/C2-C6*A(J-1))*B(J)
      J=J+1
      B(J)=1./((-C1-C2)/C7-C6*B(J-1))
      A(J)=(-C5/C7-C6*A(J-1))*B(J)
 1020 CONTINUE
      IF(K2 .EQ. 2)GO TO 1030
      A(J+1)=(DY2-C4/C2+C2*A(J))/(C2*(B(J)-C2))
      GO TO 1060
 1030 A(J+1)=(DY2/2.+A(J))/(-2.*C2*B(J))
      GO TO 1060
C
C  THE FOLLOWING STATEMENTS ARE FOR CASE WHERE N=2
C
 1040 C3=K1
      C2=1./C3
      IF(K2 .EQ. 2)GO TO 1050
      A(J+1)=((Y(2)-Y(1))/C1-A(J)*C1-DY2)/(C1*C1)*C2
      GO TO 1060
 1050 A(J+1)=C3*((DY2+2.*A(1))/(4.*C1))
 1060 J=2*(N-1)
 1070 J=J-1
      IF(J .LE. 0)GO TO 1080
      A(J)=A(J)-B(J)*A(J+1)
      GO TO 1070
C
C  INTERPOLATE/EXTRAPOLATE AT INPUT VALUES OF XP
C
 1080 DO 1120 JJ=1,NP
      IF(XP(JJ) .GT. X(1))GO TO 1090
C
C  SPECIAL CASE FOR EXTRAPOLATION OFF LOWER END OF TABLE
C
      C=X(2)-X(1)
      DYDXP(JJ)=(Y(2)-Y(1))/C+A(1)*C
      YP(JJ)=Y(1)+DYDXP(JJ)*(XP(JJ)-X(1))
c     CALL MESSG(XP(JJ),YP(JJ),X(1),X(N),Y(1),Y(N),1)
      GO TO 1120
 1090 IF(XP(JJ) .LT. X(N))GO TO 1100
C
C  SPECIAL CASE FOR EXTRAPOLATION OFF UPPER END OF TABLE
C
      C=X(N)-X(N-1)
      DYDXP(JJ)=(Y(N)-Y(N-1))/C-A(2*N-3)*C-A(2*N-2)*C*C
      YP(JJ)=Y(N)+DYDXP(JJ)*(XP(JJ)-X(N))
c     CALL MESSG(XP(JJ),YP(JJ),X(1),X(N),Y(1),Y(N),1)
      GO TO 1120
 1100 I=1
 1110 I=I+1
      IF(X(I) .LT. XP(JJ))GO TO 1110
C
C  NOW XP(JJ) HAS BEEN BRACKETED
C
      C=XP(JJ)-X(I-1)
      D=X(I)-XP(JJ)
      K=2*I-3
      SLOPE=(Y(I)-Y(I-1))/(X(I)-X(I-1))
      YP(JJ)=Y(I-1)+(SLOPE+(A(K)+A(K+1)*C)*D)*C
      DYDXP(JJ)=SLOPE+A(K)*(D-C)+A(K+1)*(2.*D-C)*C
 1120 CONTINUE
C
      RETURN
      END
